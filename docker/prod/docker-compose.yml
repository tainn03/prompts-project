version: "3.8"

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: auto_tms_prod_db
      POSTGRES_USER: ${POSTGRES_USER:-prod_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-prod_password}
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
    networks:
      - auto-tms-prod
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-prod_user} -d auto_tms_prod_db",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  auto-tms:
    image: "tann0308/auto-tms:prod"
    container_name: auto-tms-prod
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auto_tms_prod_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-prod_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-prod_password}
      JWT_EXPIRATION_TIME: 86400
      JAVA_OPTS: "-Xms512m -Xmx1024m"
    volumes:
      - ./config/security:/app/config/security
    networks:
      - auto-tms-prod
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G
        reservations:
          cpus: "1"
          memory: 1G

networks:
  auto-tms-prod:
    driver: "bridge"

volumes:
  postgres-prod-data:
    driver: local
