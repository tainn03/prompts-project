// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Gender {
  MALE
  FEMALE
  UNKNOWN
}

model User {
  id                                    Int                                    @id @default(autoincrement())
  username                              String?                                @unique
  email                                 String?                                @unique
  emailVerified                         Boolean?                               @map("email_verified")
  phoneNumber                           String?                                @map("phone_number")
  phoneNumberVerified                   Boolean?                               @map("phone_number_verified")
  provider                              String?
  password                              String?
  resetPasswordToken                    String?                                @map("reset_password_token")
  confirmationToken                     String?                                @map("confirmation_token")
  confirmed                             Boolean?
  blocked                               Boolean?
  isAdmin                               Boolean?                               @map("is_admin")
  createdAt                             DateTime                               @default(now()) @map("created_at")
  updatedAt                             DateTime                               @updatedAt @map("updated_at")
  OrdersUpdatedByUserLinks              OrdersUpdatedByUserLinks?
  OrdersCreatedByUserLinks              OrdersCreatedByUserLinks?
  OrderStatusesCreatedByUserLinks       OrderStatusesCreatedByUserLinks?
  OrderStatusesUpdatedByUserLinks       OrderStatusesUpdatedByUserLinks?
  RoutesCreatedByUserLinks              RoutesCreatedByUserLinks?
  RoutesUpdatedByUserLinks              RoutesUpdatedByUserLinks?
  RoutePointsCreatedByUserLinks         RoutePointsCreatedByUserLinks?
  RoutePointsUpdatedByUserLinks         RoutePointsUpdatedByUserLinks?
  ZonesCreatedByUserLinks               ZonesCreatedByUserLinks?
  ZonesUpdatedByUserLinks               ZonesUpdatedByUserLinks?
  AddressInformationsCreatedByUserLinks AddressInformationsCreatedByUserLinks?
  AddressInformationsUpdatedByUserLinks AddressInformationsUpdatedByUserLinks?
  OrderParticipantsCreatedByUserLinks   OrderParticipantsCreatedByUserLinks?
  OrderParticipantsUpdatedByUserLinks   OrderParticipantsUpdatedByUserLinks?
  OrderParticipantsUserLinks            OrderParticipantsUserLinks?
  WareHousesCreatedByUserLinks          WareHousesCreatedByUserLinks?
  WareHousesUpdatedByUserLinks          WareHousesUpdatedByUserLinks?
  OrderGroupStatusesCreatedByUserLinks  OrderGroupStatusesCreatedByUserLinks?
  OrderGroupStatusesUpdatedByUserLinks  OrderGroupStatusesUpdatedByUserLinks?
  OrderTripsCreatedByUserLinks          OrderTripsCreatedByUserLinks?
  OrderTripsUpdatedByUserLinks          OrderTripsUpdatedByUserLinks?
  OrderTripStatusesCreatedByUserLinks   OrderTripStatusesCreatedByUserLinks?
  OrderTripStatusesUpdatedByUserLinks   OrderTripStatusesUpdatedByUserLinks?
  CustomersCreatedByUserLinks           CustomersCreatedByUserLinks?
  CustomersUpdatedByUserLinks           CustomersUpdatedByUserLinks?
  OrderTripMessageCreatedByUserLinks    OrderTripMessageCreatedByUserLinks?
  OrderTripMessageUpdatedByUserLinks    OrderTripMessageUpdatedByUserLinks?
  OrderTripMessagesReadByUsersLinks     OrderTripMessagesReadByUsersLinks?
  DriverReportsCreatedByUserLinks       DriverReportsCreatedByUserLinks?
  DriverReportsUpdatedByUserLinks       DriverReportsUpdatedByUserLinks?
  WorkflowCreatedByUserLinks            WorkflowCreatedByUserLinks?
  WorkflowUpdatedByUserLinks            WorkflowUpdatedByUserLinks?

  @@map("up_users")
}

model UserRoleLinks {
  id        Int  @id @default(autoincrement())
  userId    Int  @map("user_id")
  roleId    Int  @map("role_id")
  userOrder Int? @map("user_order")

  @@map("up_users_role_links")
}

model UserDetail {
  id          Int       @id @default(autoincrement())
  firstName   String?   @map("first_name")
  lastName    String?   @map("last_name")
  dateOfBirth DateTime? @map("date_of_birth")
  gender      Gender?
  description String?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  publishedAt DateTime? @map("published_at")

  @@map("user_details")
}

model UserDetailLinks {
  id           Int @id @default(autoincrement())
  userId       Int @map("user_id")
  userDetailId Int @map("user_detail_id")

  @@map("up_users_detail_links")
}

model UserDetailAddressLinks {
  id                   Int @id @default(autoincrement())
  userDetailId         Int @map("user_detail_id")
  addressInformationId Int @map("address_information_id")

  @@map("user_details_address_links")
}

model UserSetting {
  id                     Int       @id @default(autoincrement())
  organizationId         Int?      @map("organization_id")
  locale                 String?
  lastNotificationSentAt DateTime? @map("last_notification_sent_at")
  messageTokens          Json?     @map("message_tokens")
  createdAt              DateTime  @default(now()) @map("created_at")
  updatedAt              DateTime  @updatedAt @map("updated_at")
  publishedAt            DateTime? @map("published_at")

  @@map("user_settings")
}

model UserSettingLinks {
  id            Int @id @default(autoincrement())
  userId        Int @map("user_id")
  userSettingId Int @map("user_setting_id")

  @@map("up_users_setting_links")
}

enum UserLinkedAccountProvider {
  GOOGLE
  FACEBOOK
  APPLE
  MICROSOFT
}

model UserLinkedAccount {
  id       Int                       @id @default(autoincrement())
  provider UserLinkedAccountProvider
  email    String?
  userId   String?
  avatar   String?
}

model UploadFile {
  id                Int      @id @default(autoincrement())
  name              String
  alternativeText   String?
  caption           String?
  width             Int?
  height            Int?
  formats           Json?
  hash              String?
  ext               String
  mime              String
  size              Float
  url               String
  previewUrl        String?
  provider          String?
  provider_metadata Json?
  folderId          Int
  folderPath        String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model UploadFoLder {
  id          Int       @id @default(autoincrement())
  name        String?
  pathId      Int?
  path        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  publishedAt DateTime?
}

enum MaintenanceTypeType {
  VEHICLE
  TRAILER
}

model MaintenanceType {
  id             Int                 @id @default(autoincrement())
  type           MaintenanceTypeType
  name           String
  description    String?
  isActive       Boolean             @default(true) @map("is_active")
  createdAt      DateTime            @default(now()) @map("created_at")
  createdById    Int?                @map("created_by_id")
  updatedAt      DateTime            @updatedAt @map("updated_at")
  updatedById    Int?                @map("updated_by_id")
  publishedAt    DateTime?           @map("published_at")
  organizationId Int                 @map("organization_id")

  @@map("maintenance_types")
}

model MaintenanceTypesCreatedByUserLinks {
  id                Int @id @default(autoincrement())
  maintenanceTypeId Int @map("maintenance_type_id")
  userId            Int @map("user_id")

  @@map("maintenance_types_created_by_user_links")
}

model MaintenanceTypesUpdatedByUserLinks {
  id                Int @id @default(autoincrement())
  maintenanceTypeId Int @map("maintenance_type_id")
  userId            Int @map("user_id")

  @@map("maintenance_types_updated_by_user_links")
}

model MerchandiseType {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  name           String
  description    String?
  isActive       Boolean   @default(true) @map("is_active")
  createdAt      DateTime  @default(now()) @map("created_at")
  createdById    Int?      @map("created_by_id")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  updatedById    Int?      @map("updated_by_id")
  publishedAt    DateTime? @map("published_at")

  @@map("merchandise_types")
}

model MerchandiseTypesCreatedByUserLinks {
  id                Int @id @default(autoincrement())
  merchandiseTypeId Int @map("merchandise_type_id")
  userId            Int @map("user_id")

  @@map("merchandise_types_created_by_user_links")
}

model MerchandiseTypesUpdatedByUserLinks {
  id                Int @id @default(autoincrement())
  merchandiseTypeId Int @map("merchandise_type_id")
  userId            Int @map("user_id")

  @@map("merchandise_types_updated_by_user_links")
}

enum UnitOfMeasureType {
  CUBIC_METER
  KILOGRAM
  TON
  PALLET
}

model UnitOfMeasure {
  id                       Int                       @id @default(autoincrement())
  type                     UnitOfMeasureType?
  organizationId           Int                       @map("organization_id")
  code                     String
  name                     String
  isSystem                 Boolean                   @default(false) @map("is_system")
  description              String?
  isActive                 Boolean                   @default(true) @map("is_active")
  createdAt                DateTime                  @default(now()) @map("created_at")
  createdById              Int?                      @map("created_by_id")
  updatedAt                DateTime                  @updatedAt @map("updated_at")
  updatedById              Int?                      @map("updated_by_id")
  publishedAt              DateTime?                 @map("published_at")
  OrdersUnitOfMeasureLinks OrdersUnitOfMeasureLinks?

  @@map("unit_of_measures")
}

model UnitOfMeasuresCreatedByUserLinks {
  id              Int @id @default(autoincrement())
  unitOfMeasureId Int @map("unit_of_measure_id")
  userId          Int @map("user_id")

  @@map("unit_of_measures_created_by_user_links")
}

model UnitOfMeasuresUpdatedByUserLinks {
  id              Int @id @default(autoincrement())
  unitOfMeasureId Int @map("unit_of_measure_id")
  userId          Int @map("user_id")

  @@map("unit_of_measures_updated_by_user_links")
}

enum AdministrativeUnitType {
  COUNTRY
  CITY
  DISTRICT
  WARD
}

model AdministrativeUnit {
  id                               Int                               @id @default(autoincrement())
  code                             String
  name                             String
  type                             AdministrativeUnitType
  parentCode                       String?                           @map("parent_code")
  level                            String?
  countryCode                      String?                           @map("country_code")
  postalCode                       String?                           @map("postal_code")
  description                      String?
  isActive                         Boolean                           @default(true) @map("is_active")
  createdAt                        DateTime                          @default(now()) @map("created_at")
  createdById                      Int?                              @map("created_by_id")
  updatedAt                        DateTime                          @updatedAt @map("updated_at")
  updatedById                      Int?                              @map("updated_by_id")
  publishedAt                      DateTime?                         @map("published_at")
  AddressInformationsCountryLinks  AddressInformationsCountryLinks?
  AddressInformationsCityLinks     AddressInformationsCityLinks?
  AddressInformationsDistrictLinks AddressInformationsDistrictLinks?
  AddressInformationsWardLinks     AddressInformationsWardLinks?

  @@map("administrative_units")
}

model AdministrativeUnitsCreatedByUserLinks {
  id                   Int @id @default(autoincrement())
  administrativeUnitId Int @map("administrative_unit_id")
  userId               Int @map("user_id")

  @@map("administrative_units_created_by_user_links")
}

model AdministrativeUnitsUpdatedByUserLinks {
  id                   Int @id @default(autoincrement())
  administrativeUnitId Int @map("administrative_unit_id")
  userId               Int @map("user_id")

  @@map("administrative_units_updated_by_user_links")
}

model Organization {
  id                    Int       @id @default(autoincrement())
  code                  String    @unique
  alias                 String?   @unique
  slug                  String?   @unique
  name                  String
  internationalName     String?   @map("international_name")
  abbreviationName      String?   @map("abbreviation_name")
  taxCode               String?   @map("tax_code")
  email                 String?
  phoneNumber           String?   @map("phone_number")
  website               String?
  businessAddress       String?   @map("business_address")
  contactName           String?   @map("contact_name")
  contactPosition       String?   @map("contact_position")
  contactEmail          String?   @map("contact_email")
  contactPhoneNumber    String?   @map("contact_phone_number")
  createdAt             DateTime  @default(now()) @map("created_at")
  createdById           Int?      @map("created_by_id")
  updatedAt             DateTime  @updatedAt @map("updated_at")
  updatedById           Int?      @map("updated_by_id")
  isActive              Boolean?  @default(false) @map("is_active")
  publishedAt           DateTime? @map("published_at")
  organizationSettingId Int?      @ignore

  @@map("organizations")
}

enum OrganizationInitialValueType {
  DRIVER_LICENSE_TYPE
  DRIVER_REPORT
  DRIVER_EXPENSE
  MAINTENANCE_TYPE
  MERCHANDISE_TYPE
  ORGANIZATION_ROLE
  TRAILER_TYPE
  UNIT_OF_MEASURE
  VEHICLE_TYPE
}

model OrganizationInitialValue {
  id          Int                          @id @default(autoincrement())
  type        OrganizationInitialValueType
  data        Json?
  description String?
  isActive    Boolean                      @default(true) @map("is_active")
  createdAt   DateTime                     @default(now()) @map("created_at")
  createdById Int?
  updatedAt   DateTime                     @updatedAt @map("updated_at")
  updatedById Int?
  publishedAt DateTime?                    @map("published_at")

  @@map("organization_initial_values")
}

model OrganizationInitialValuesCreatedByUserLinks {
  id                         Int @id @default(autoincrement())
  organizationInitialValueId Int @map("organization_initial_value_id")
  userId                     Int @map("user_id")

  @@map("organization_initial_values_created_by_user_links")
}

model OrganizationInitialValuesUpdatedByUserLinks {
  id                         Int @id @default(autoincrement())
  organizationInitialValueId Int @map("organization_initial_value_id")
  userId                     Int @map("user_id")

  @@map("organization_initial_values_updated_by_user_links")
}

enum SMTPSettingSecurity {
  NONE
  SSL_TLS
  STARTTLS
  AUTO
}

model SMTPSetting {
  id                    Int                 @id @default(autoincrement())
  server                String?
  port                  Int?
  fromName              String?             @map("from_name")
  fromEmail             String?             @map("from_email")
  authenticationEnabled Boolean             @default(true) @map("authentication_enabled")
  username              String?
  password              String?
  timeout               Int?
  security              SMTPSettingSecurity @default(AUTO)
  createdAt             DateTime            @default(now()) @map("created_at")
  createdById           Int?                @map("created_by_id")
  updatedAt             DateTime            @updatedAt @map("updated_at")
  updatedById           Int?                @map("updated_by_id")
  publishedAt           DateTime?           @map("published_at")

  @@map("smtp_settings")
}

enum EmailTemplateType {
  TEST_EMAIL
  ACCOUNT_ACTIVATION
  WELCOME
  VERIFICATION_CODE
  ADMIN_NEW_ORGANIZATION
  USER_NEW_ORGANIZATION
  ORGANIZATION_INVITATION
  PASSWORD_CHANGED
  RESET_PASSWORD
}

model EmailTemplate {
  id          Int               @id @default(autoincrement())
  name        String
  locale      String?
  type        EmailTemplateType
  subject     String?
  body        String?
  description String?
  isActive    Boolean           @default(true) @map("is_active")
  createdAt   DateTime          @default(now()) @map("created_at")
  createdById Int?
  updatedAt   DateTime          @updatedAt @map("updated_at")
  updatedById Int?
  publishedAt DateTime?         @map("published_at")

  @@map("email_templates")
}

model EmailTemplatesCreatedByUserLinks {
  id              Int @id @default(autoincrement())
  emailTemplateId Int @map("email_template_id")
  userId          Int @map("user_id")

  @@map("email_templates_created_by_user_links")
}

model EmailTemplatesUpdatedByUserLinks {
  id              Int @id @default(autoincrement())
  emailTemplateId Int @map("email_template_id")
  userId          Int @map("user_id")

  @@map("email_templates_updated_by_user_links")
}

enum TokenType {
  ACCOUNT_ACTIVATION
  FORGOT_PASSWORD
  INVITATION_CODE
  PASSWORDLESS
  VERIFICATION_EMAIL
  VERIFICATION_PHONE_NUMBER
}

model Token {
  id             Int       @id @default(autoincrement())
  type           TokenType
  value          String?
  data           String?
  expirationTime DateTime?
  description    String?
  isActive       Boolean   @default(true)
  createdAt      DateTime  @default(now())
  createdById    Int?
  updatedAt      DateTime  @updatedAt
  updatedById    Int?
  publishedAt    DateTime?
}

model DriverReport {
  id                                 Int                                 @id @default(autoincrement())
  organizationId                     Int                                 @map("organization_id")
  name                               String
  isRequired                         Boolean                             @default(false) @map("is_required")
  photoRequired                      Boolean                             @default(false) @map("photo_required")
  billOfLadingRequired               Boolean?                            @default(false) @map("bill_of_lading_required")
  displayOrder                       Int?                                @default(0) @map("display_order")
  isSystem                           Boolean                             @default(false) @map("is_system")
  type                               OrderTripStatusType?
  isDisplayedOnApp                   Boolean?                            @default(true) @map("is_displayed_on_app")
  description                        String?
  isActive                           Boolean                             @default(true) @map("is_active")
  createdAt                          DateTime                            @default(now()) @map("created_at")
  createdById                        Int?                                @map("created_by_id")
  updatedAt                          DateTime                            @updatedAt @map("updated_at")
  updatedById                        Int?                                @map("updated_by_id")
  publishedAt                        DateTime?                           @map("published_at")
  OrderTripStatusesDriverReportLinks OrderTripStatusesDriverReportLinks?
  DriverReportsCreatedByUserLinks    DriverReportsCreatedByUserLinks?
  DriverReportsUpdatedByUserLinks    DriverReportsUpdatedByUserLinks?
  DriverReportsReportDetailsLinks    DriverReportsReportDetailsLinks[]
  DriverReportsWorkflowLinks         DriverReportsWorkflowLinks?

  @@map("driver_reports")
}

model DriverReportsCreatedByUserLinks {
  id             Int @id @default(autoincrement())
  driverReportId Int @map("driver_report_id")
  userId         Int @map("user_id")

  driverReport DriverReport @relation(fields: [driverReportId], references: [id])
  user         User         @relation(fields: [userId], references: [id])

  @@unique([driverReportId])
  @@unique([userId])
  @@map("driver_reports_created_by_user_links")
}

model DriverReportsUpdatedByUserLinks {
  id             Int @id @default(autoincrement())
  driverReportId Int @map("driver_report_id")
  userId         Int @map("user_id")

  driverReport DriverReport @relation(fields: [driverReportId], references: [id])
  user         User         @relation(fields: [userId], references: [id])

  @@unique([driverReportId])
  @@unique([userId])
  @@map("driver_reports_updated_by_user_links")
}

model DriverReportDetail {
  id                              Int                               @id @default(autoincrement())
  organizationId                  Int                               @map("organization_id")
  name                            String
  description                     String?
  displayOrder                    Int?                              @default(0) @map("display_order")
  createdAt                       DateTime                          @default(now()) @map("created_at")
  updatedAt                       DateTime                          @updatedAt @map("updated_at")
  publishedAt                     DateTime?                         @map("published_at")
  DriverReportsReportDetailsLinks DriverReportsReportDetailsLinks[]

  @@map("driver_report_details")
}

model DriverReportsReportDetailsLinks {
  id                      Int @id @default(autoincrement())
  driverReportId          Int @map("driver_report_id")
  driverReportDetailId    Int @map("driver_report_detail_id")
  driverReportDetailOrder Int @map("driver_report_detail_order")

  driverReport       DriverReport       @relation(fields: [driverReportId], references: [id])
  driverReportDetail DriverReportDetail @relation(fields: [driverReportDetailId], references: [id])

  @@unique([driverReportId])
  @@unique([driverReportDetailId])
  @@map("driver_reports_report_details_links")
}

enum WorkflowType {
  IMPORT_CARGO
  EXPORT_CARGO
  BULK_CARGO
}

model Workflow {
  id                         Int                          @id @default(autoincrement())
  organizationId             Int                          @map("organization_id")
  name                       String
  description                String?
  isActive                   Boolean                      @default(true) @map("is_active")
  isSystem                   Boolean                      @default(false) @map("is_system")
  isDefault                  Boolean                      @default(false) @map("is_default")
  type                       WorkflowType?
  createdAt                  DateTime                     @default(now()) @map("created_at")
  createdById                Int?                         @map("created_by_id")
  updatedAt                  DateTime                     @updatedAt @map("updated_at")
  updatedById                Int?                         @map("updated_by_id")
  publishedAt                DateTime?                    @map("published_at")
  WorkflowCreatedByUserLinks WorkflowCreatedByUserLinks?
  WorkflowUpdatedByUserLinks WorkflowUpdatedByUserLinks?
  DriverReportsWorkflowLinks DriverReportsWorkflowLinks[]

  @@map("workflows")
}

model WorkflowCreatedByUserLinks {
  id         Int @id @default(autoincrement())
  workflowId Int @map("workflow_id")
  userId     Int @map("user_id")

  workflow Workflow @relation(fields: [workflowId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@unique([workflowId])
  @@unique([userId])
  @@map("workflows_created_by_user_links")
}

model WorkflowUpdatedByUserLinks {
  id         Int @id @default(autoincrement())
  workflowId Int @map("workflow_id")
  userId     Int @map("user_id")

  workflow Workflow @relation(fields: [workflowId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@unique([workflowId])
  @@unique([userId])
  @@map("workflows_updated_by_user_links")
}

model DriverReportsWorkflowLinks {
  id             Int @id @default(autoincrement())
  driverReportId Int @map("driver_report_id")
  workflowId     Int @map("workflow_id")

  driverReport DriverReport @relation(fields: [driverReportId], references: [id])
  workflow     Workflow     @relation(fields: [workflowId], references: [id])

  @@unique([driverReportId])
  @@unique([workflowId])
  @@map("driver_reports_workflow_links")
}

model VehicleType {
  id                Int       @id @default(autoincrement())
  organizationId    Int       @map("organization_id")
  name              String
  description       String?
  driverExpenseRate Float?    @map("driver_expense_rate")
  isActive          Boolean   @default(true) @map("is_active")
  createdAt         DateTime  @default(now()) @map("created_at")
  createdById       Int?      @map("created_by_id")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  updatedById       Int?      @map("updated_by_id")
  publishedAt       DateTime? @map("published_at")

  @@map("vehicle_types")
}

model VehicleTypesCreatedByUserLinks {
  id            Int @id @default(autoincrement())
  vehicleTypeId Int @map("vehicle_type_id")
  userId        Int @map("user_id")

  @@map("vehicle_types_created_by_user_links")
}

model VehicleTypesUpdatedByUserLinks {
  id            Int @id @default(autoincrement())
  vehicleTypeId Int @map("vehicle_type_id")
  userId        Int @map("user_id")

  @@map("vehicle_types_updated_by_user_links")
}

model AddressInformation {
  id                                    Int                                    @id @default(autoincrement())
  postalCode                            String?                                @map("postal_code")
  addressLine1                          String?                                @map("address_line_1")
  addressLine2                          String?                                @map("address_line_2")
  latitude                              Float?
  longitude                             Float?
  createdAt                             DateTime                               @default(now()) @map("created_at")
  createdById                           Int?                                   @map("created_by_id")
  updatedAt                             DateTime                               @updatedAt @map("updated_at")
  updatedById                           Int?                                   @map("updated_by_id")
  publishedAt                           DateTime?                              @map("published_at")
  RoutePointsAddressLinks               RoutePointsAddressLinks?
  AddressInformationsCreatedByUserLinks AddressInformationsCreatedByUserLinks?
  AddressInformationsUpdatedByUserLinks AddressInformationsUpdatedByUserLinks?
  AddressInformationsCountryLinks       AddressInformationsCountryLinks?
  AddressInformationsCityLinks          AddressInformationsCityLinks?
  AddressInformationsDistrictLinks      AddressInformationsDistrictLinks?
  AddressInformationsWardLinks          AddressInformationsWardLinks?

  @@map("address_informations")
}

model AddressInformationsCreatedByUserLinks {
  id                   Int @id @default(autoincrement())
  addressInformationId Int @map("address_information_id")
  userId               Int @map("user_id")

  user               User               @relation(fields: [userId], references: [id])
  addressInformation AddressInformation @relation(fields: [addressInformationId], references: [id])

  @@unique([userId])
  @@unique([addressInformationId])
  @@map("address_informations_created_by_user_links")
}

model AddressInformationsUpdatedByUserLinks {
  id                   Int @id @default(autoincrement())
  addressInformationId Int @map("address_information_id")
  userId               Int @map("user_id")

  user               User               @relation(fields: [userId], references: [id])
  addressInformation AddressInformation @relation(fields: [addressInformationId], references: [id])

  @@unique([userId])
  @@unique([addressInformationId])
  @@map("address_informations_updated_by_user_links")
}

model AddressInformationsCountryLinks {
  id                   Int @id @default(autoincrement())
  addressInformationId Int @map("address_information_id")
  administrativeUnitId Int @map("administrative_unit_id")

  addressInformation AddressInformation @relation(fields: [addressInformationId], references: [id])
  administrativeUnit AdministrativeUnit @relation(fields: [administrativeUnitId], references: [id])

  @@unique([addressInformationId])
  @@unique([administrativeUnitId])
  @@map("address_informations_country_links")
}

model AddressInformationsCityLinks {
  id                   Int @id @default(autoincrement())
  addressInformationId Int @map("address_information_id")
  administrativeUnitId Int @map("administrative_unit_id")

  addressInformation AddressInformation @relation(fields: [addressInformationId], references: [id])
  administrativeUnit AdministrativeUnit @relation(fields: [administrativeUnitId], references: [id])

  @@unique([addressInformationId])
  @@unique([administrativeUnitId])
  @@map("address_informations_city_links")
}

model AddressInformationsDistrictLinks {
  id                   Int @id @default(autoincrement())
  addressInformationId Int @map("address_information_id")
  administrativeUnitId Int @map("administrative_unit_id")

  addressInformation AddressInformation @relation(fields: [addressInformationId], references: [id])
  administrativeUnit AdministrativeUnit @relation(fields: [administrativeUnitId], references: [id])

  @@unique([addressInformationId])
  @@unique([administrativeUnitId])
  @@map("address_informations_district_links")
}

model AddressInformationsWardLinks {
  id                   Int @id @default(autoincrement())
  addressInformationId Int @map("address_information_id")
  administrativeUnitId Int @map("administrative_unit_id")

  addressInformation AddressInformation @relation(fields: [addressInformationId], references: [id])
  administrativeUnit AdministrativeUnit @relation(fields: [administrativeUnitId], references: [id])

  @@unique([addressInformationId])
  @@unique([administrativeUnitId])
  @@map("address_informations_ward_links")
}

enum OrganizationSettingExtendedValueType {
  STRING
  NUMBER
  BOOLEAN
  DATE
  DATETIME
  JSON
}

model OrganizationSettingExtended {
  id             Int                                  @id @default(autoincrement())
  organizationId Int                                  @map("organization_id")
  key            String
  value          String?
  description    String?
  valueType      OrganizationSettingExtendedValueType @default(STRING) @map("value_type")
  isActive       Boolean                              @default(true) @map("is_active")
  createdAt      DateTime                             @default(now()) @map("created_at")
  createdById    Int?                                 @map("created_by_id")
  updatedAt      DateTime                             @updatedAt @map("updated_at")
  updatedById    Int?                                 @map("updated_by_id")
  publishedAt    DateTime?                            @map("published_at")
}

enum OrganizationSettingOrderCodeGenerationType {
  DEFAULT
  ROUTE_SPECIFIC
  CUSTOMER_SPECIFIC
}

model OrganizationSetting {
  id                             Int                                         @id @default(autoincrement())
  organizationId                 Int                                         @map("organization_id")
  orderCodeGenerationType        OrganizationSettingOrderCodeGenerationType? @map("order_code_generation_type")
  orderCodeMaxLength             Int?                                        @map("order_code_max_length")
  customerCodePrefixMaxLength    Int?                                        @map("customer_code_prefix_max_length")
  routeCodePrefixMaxLength       Int?                                        @map("route_code_prefix_max_length")
  minBOLSubmitDays               Int?                                        @map("min_bol_submit_days")
  minVehicleDocumentReminderDays Int?                                        @map("min_vehicle_document_reminder_days")
  maxConcurrentDeliveries        Int?                                        @map("max_concurrent_deliveries")
  driverInactivityTimeout        Int?                                        @map("driver_inactivity_timeout")
  maxConcurrentEffDate           DateTime?                                   @map("max_concurrent_eff_date")
  showSalaryOnApp                Boolean?                                    @default(false) @map("show_salary_on_app")
  autoDispatch                   Json?                                       @map("auto_dispatch")
  createdAt                      DateTime                                    @default(now()) @map("created_at")
  updatedAt                      DateTime                                    @updatedAt @map("updated_at")
  publishedAt                    DateTime?                                   @map("published_at")

  @@map("organization_settings")
}

model DriverLicenseType {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  name           String
  description    String?
  isActive       Boolean   @default(true) @map("is_active")
  createdAt      DateTime  @default(now()) @map("created_at")
  createdById    Int?      @map("created_by_id")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  updatedById    Int?      @map("updated_by_id")
  publishedAt    DateTime? @map("published_at")

  @@map("driver_license_types")
}

model DriverLicenseTypesCreatedByUserLinks {
  id                  Int @id @default(autoincrement())
  driverLicenseTypeId Int @map("driver_license_type_id")
  userId              Int @map("user_id")

  @@map("driver_license_types_created_by_user_links")
}

model DriverLicenseTypesUpdatedByUserLinks {
  id                  Int @id @default(autoincrement())
  driverLicenseTypeId Int @map("driver_license_type_id")
  userId              Int @map("user_id")

  @@map("driver_license_types_updated_by_user_links")
}

model TrailerType {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  name           String
  description    String?
  isActive       Boolean   @default(true) @map("is_active")
  createdAt      DateTime  @default(now()) @map("created_at")
  createdById    Int?      @map("created_by_id")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  updatedById    Int?      @map("updated_by_id")
  publishedAt    DateTime? @map("published_at")

  @@map("trailer_types")
}

model TrailerTypesCreatedByUserLinks {
  id            Int @id @default(autoincrement())
  trailerTypeId Int @map("trailer_type_id")
  userId        Int @map("user_id")

  @@map("trailer_types_created_by_user_links")
}

model TrailerTypesUpdatedByUserLinks {
  id            Int @id @default(autoincrement())
  trailerTypeId Int @map("trailer_type_id")
  userId        Int @map("user_id")

  @@map("trailer_types_updated_by_user_links")
}

model OrganizationMember {
  id          Int       @id @default(autoincrement())
  username    String
  email       String?
  phoneNumber String?   @map("phone_number")
  description String?
  isAdmin     Boolean?  @map("is_admin")
  isLinked    Boolean?  @default(false) @map("is_linked")
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  createdById Int?      @map("created_by_id")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  updatedById Int?      @map("updated_by_id")
  publishedAt DateTime? @map("published_at")

  @@map("organization_members")
}

enum OrganizationRoleType {
  ADMIN
  MANAGER
  ACCOUNTANT
  DISPATCH_MANAGER
  DISPATCHER
  CUSTOMER
  DRIVER
}

model OrganizationRole {
  id             Int                   @id @default(autoincrement())
  organizationId Int                   @map("organization_id")
  type           OrganizationRoleType?
  name           String
  permissions    Json?
  description    String?
  isActive       Boolean               @default(true) @map("is_active")
  createdAt      DateTime              @default(now()) @map("created_at")
  createdById    Int?                  @map("created_by_id")
  updatedAt      DateTime              @updatedAt @map("updated_at")
  updatedById    Int?                  @map("updated_by_id")
  publishedAt    DateTime?             @map("published_at")

  @@map("organization_roles")
}

enum CustomFieldType {
  CUSTOMER
  SUBCONTRACTOR
  DRIVER
  ORDER
  VEHICLE
  TRAILER
  ROUTE_POINT
  ORDER_TRIP
}

enum CustomFieldDataType {
  TEXT
  EMAIL
  NUMBER
  CHOICE
  DATE
  DATETIME
  BOOLEAN
  FILE
}

model CustomField {
  id              Int                 @id @default(autoincrement())
  organizationId  Int
  type            CustomFieldType
  dataType        CustomFieldDataType
  name            String
  key             String
  value           String?
  min             Int?                @default(0)
  max             Int?                @default(0)
  isRequired      Boolean             @default(false)
  validationRegex String?
  description     String?
  displayOrder    Int?
  isActive        Boolean             @default(true)
  canViewByDriver Boolean?
  canEditByDriver Boolean?
  createdAt       DateTime            @default(now())
  createdById     Int?
  updatedAt       DateTime            @updatedAt
  updatedById     Int?
  publishedAt     DateTime?
}

model BankAccount {
  id            Int       @id @default(autoincrement())
  accountNumber String?   @map("account_number")
  holderName    String?   @map("holder_name")
  bankName      String?   @map("bank_name")
  bankBranch    String?   @map("bank_branch")
  description   String?
  createdAt     DateTime  @default(now()) @map("created_at")
  createdById   Int?      @map("created_by_id")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  updatedById   Int?      @map("updated_by_id")
  publishedAt   DateTime? @map("published_at")

  @@map("bank_accounts")
}

model BankAccountsCreatedByUserLinks {
  id            Int @id @default(autoincrement())
  bankAccountId Int @map("bank_account_id")
  userId        Int @map("user_id")

  @@map("bank_accounts_created_by_user_links")
}

model BankAccountsUpdatedByUserLinks {
  id            Int @id @default(autoincrement())
  bankAccountId Int @map("bank_account_id")
  userId        Int @map("user_id")

  @@map("bank_accounts_updated_by_user_links")
}

enum VehicleFuelType {
  GASOLINE
  DIESEL
  ELECTRIC
  HYBRID
  OTHER
}

enum VehicleOwnerType {
  ORGANIZATION
  SUBCONTRACTOR
}

model Vehicle {
  id                                   Int                     @id @default(autoincrement())
  ownerType                            VehicleOwnerType
  organizationId                       Int
  subcontractorId                      Int
  vehicleNumber                        String
  idNumber                             String?
  typeId                               Int?
  brand                                String?
  model                                String?
  color                                String?
  yearOfManufacture                    Int?
  fuelType                             VehicleFuelType
  startUsageDate                       DateTime?
  maxLength                            Float?
  maxWidth                             Float?
  maxHeight                            Float?
  cubicMeterCapacity                   Float?
  tonPayloadCapacity                   Float?
  palletCapacity                       Int?
  registrationDate                     DateTime?
  registrationExpirationDate           DateTime?
  technicalSafetyRegistrationDate      DateTime?
  technicalSafetyExpirationDate        DateTime?
  liabilityInsuranceRegistrationDate   DateTime?
  liabilityInsuranceExpirationDate     DateTime?
  driverId                             Int?
  trailerId                            Int?
  description                          String?
  isActive                             Boolean                 @default(true)
  fuelConsumption                      Float?
  registrationCertificateImageId       Int?
  technicalSafetyCertificateImageId    Int?
  liabilityInsuranceCertificateImageId Int?
  meta                                 Json?
  createdAt                            DateTime                @default(now())
  createdById                          Int?
  updatedAt                            DateTime                @updatedAt
  updatedById                          Int?
  publishedAt                          DateTime?
  OrderTripsVehicleLinks               OrderTripsVehicleLinks?
}

enum VehicleTrackingStatus {
  ACTIVE
  STOPPED
  NO_SIGNAL
  STOPPED_WITH_ENGINE_ON
}

model VehicleTracking {
  id             Int                    @id @default(autoincrement())
  organizationId Int                    @map("organization_id")
  vehicleId      String                 @unique @map("vehicle_id")
  longitude      Float?
  latitude       Float?
  direction      Int?
  speed          Float?
  address        String?
  carStatus      VehicleTrackingStatus? @map("car_status")
  instantFuel    Float?                 @map("instant_fuel")
  createdAt      DateTime               @default(now()) @map("created_at")
  updatedAt      DateTime               @updatedAt @map("updated_at")
  publishedAt    DateTime?              @map("published_at")

  @@map("vehicle_trackings")
}

model VehicleTrackingVehicleLinks {
  id                Int @id @default(autoincrement())
  vehicleTrackingId Int @map("vehicle_tracking_id")
  vehicleId         Int @map("vehicle_id")

  @@map("vehicle_trackings_vehicle_links")
}

model Subcontractor {
  id              Int       @id @default(autoincrement())
  organizationId  Int
  code            String?
  name            String?
  taxCode         String?
  email           String?
  phoneNumber     String?
  website         String?
  businessAddress String?
  description     String?
  isActive        Boolean   @default(true)
  userId          Int?
  documentsId     Int?
  bankAccountId   Int?
  meta            Json?
  createdAt       DateTime  @default(now())
  createdById     Int?
  updatedAt       DateTime  @updatedAt
  updatedById     Int?
  publishedAt     DateTime?
}

enum DriverContractType {
  FIXED_TERM
  PERMANENT
}

model Driver {
  id                     Int                    @id @default(autoincrement())
  organizationId         Int
  firstName              String
  lastName               String
  dateOfBirth            DateTime?
  gender                 Gender
  idNumber               String?
  idIssueDate            DateTime?
  idIssuedBy             String?
  email                  String?
  phoneNumber            String?
  addressInformationId   Int?
  licenseTypeId          Int?
  licenseNumber          String?
  licenseIssueDate       DateTime?
  licenseExpiryDate      DateTime?
  licenseFrontImageId    Int?
  licenseBackImageId     Int?
  experienceYears        Int?
  basicSalary            Int?
  contractType           DriverContractType?
  contractStartDate      DateTime?
  contractEndDate        DateTime?
  contractDocumentIds    Int?
  bankAccountId          Int?
  meta                   Json?
  description            String?
  isActive               Boolean                @default(true)
  isOwnedBySubcontractor Boolean                @default(false)
  userId                 Int?
  unionDues              Float?
  securityDeposit        Float?
  createdAt              DateTime               @default(now())
  createdById            Int?
  updatedAt              DateTime               @updatedAt
  updatedById            Int?
  publishedAt            DateTime?
  OrderTripsDriverLinks  OrderTripsDriverLinks?
}

model DriverUserLinks {
  id       Int @id @default(autoincrement())
  driverId Int @map("driver_id")
  userId   Int @map("user_id")

  @@map("drivers_user_links")
}

enum CustomerType {
  FIXED
  CASUAL
}

model Customer {
  id                          Int                          @id @default(autoincrement())
  organizationId              Int                          @map("organization_id")
  code                        String
  name                        String
  type                        CustomerType
  taxCode                     String?                      @map("tax_code")
  email                       String?
  phoneNumber                 String?                      @map("phone_number")
  website                     String?
  businessAddress             String?                      @map("business_address")
  contactName                 String?                      @map("contact_name")
  contactPosition             String?                      @map("contact_position")
  contactEmail                String?                      @map("contact_email")
  contactPhoneNumber          String?                      @map("contact_phone_number")
  meta                        Json?
  description                 String?
  isActive                    Boolean                      @default(true) @map("is_active")
  importDriver                String?                      @map("import_driver")
  createdAt                   DateTime                     @default(now()) @map("created_at")
  createdById                 Int?                         @map("created_by_id")
  updatedAt                   DateTime                     @updatedAt @map("updated_at")
  updatedById                 Int?                         @map("updated_by_id")
  publishedAt                 DateTime?                    @map("published_at")
  OrdersCustomerLinks         OrdersCustomerLinks?
  CustomersCreatedByUserLinks CustomersCreatedByUserLinks?
  CustomersUpdatedByUserLinks CustomersUpdatedByUserLinks?

  @@map("customers")
}

model CustomersCreatedByUserLinks {
  id         Int @id @default(autoincrement())
  customerId Int @map("customer_id")
  userId     Int @map("user_id")

  customer Customer @relation(fields: [customerId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@unique([customerId])
  @@unique([userId])
  @@map("customers_created_by_user_links")
}

model CustomersUpdatedByUserLinks {
  id         Int @id @default(autoincrement())
  customerId Int @map("customer_id")
  userId     Int @map("user_id")

  customer Customer @relation(fields: [customerId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@unique([customerId])
  @@unique([userId])
  @@map("customers_updated_by_user_links")
}

model CustomersUserLinks {
  id         Int @id @default(autoincrement())
  customerId Int @map("customer_id")
  userId     Int @map("user_id")

  @@map("customers_user_links")
}

model CustomersBankAccountLinks {
  id            Int @id @default(autoincrement())
  customerId    Int @map("customer_id")
  bankAccountId Int @map("bank_account_id")

  @@map("customers_bank_account_links")
}

model CustomersDefaultUnitLinks {
  id              Int @id @default(autoincrement())
  customerId      Int @map("customer_id")
  unitOfMeasureId Int @map("unit_of_measure_id")

  @@map("customers_default_unit_links")
}

model Resource {
  id          Int       @id @default(autoincrement())
  name        String
  action      String
  description String?
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  createdById Int?      @map("created_by_id")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  updatedById Int?      @map("updated_by_id")
  publishedAt DateTime? @map("published_at")

  @@map("resources")
}

model ResourcesCreatedByUserLinks {
  id         Int @id @default(autoincrement())
  resourceId Int @map("resource_id")
  userId     Int @map("user_id")

  @@map("resources_created_by_user_links")
}

model ResourcesUpdatedByUserLinks {
  id         Int @id @default(autoincrement())
  resourceId Int @map("resource_id")
  userId     Int @map("user_id")

  @@map("resources_updated_by_user_links")
}

model ResourcesOperationsLinks {
  id             Int @id @default(autoincrement())
  resourceId     Int @map("resource_id")
  operationId    Int @map("operation_id")
  operationOrder Int @map("operation_order")

  @@map("resources_operations_links")
}

enum RouteType {
  FIXED
  NON_FIXED
}

model Route {
  id                        Int                         @id @default(autoincrement())
  organizationId            Int                         @map("organization_id")
  customerId                Int                         @map("customer_id")
  type                      RouteType?
  code                      String
  name                      String
  description               String?
  isActive                  Boolean                     @default(true) @map("is_active")
  distance                  Int?
  price                     Int?
  subcontractorCost         Int?                        @map("subcontractor_cost")
  driverCost                Int?                        @map("driver_cost")
  bridgeToll                Int?                        @map("bridge_toll")
  otherCost                 Int?                        @map("other_cost")
  minBOLSubmitDays          Int?                        @map("min_bol_submit_days")
  createdAt                 DateTime                    @default(now()) @map("created_at")
  createdById               Int?                        @map("created_by_id")
  updatedAt                 DateTime                    @updatedAt @map("updated_at")
  updatedById               Int?                        @map("updated_by_id")
  publishedAt               DateTime?                   @map("published_at")
  OrdersRouteLinks          OrdersRouteLinks[]
  RoutesCreatedByUserLinks  RoutesCreatedByUserLinks?
  RoutesUpdatedByUserLinks  RoutesUpdatedByUserLinks?
  RoutesPickupPointsLinks   RoutesPickupPointsLinks[]
  RoutesDeliveryPointsLinks RoutesDeliveryPointsLinks[]

  @@map("routes")
}

model RoutesCreatedByUserLinks {
  id      Int @id @default(autoincrement())
  routeId Int @map("route_id")
  userId  Int @map("user_id")

  route Route @relation(fields: [routeId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([routeId])
  @@unique([userId])
  @@map("routes_created_by_user_links")
}

model RoutesUpdatedByUserLinks {
  id      Int @id @default(autoincrement())
  routeId Int @map("route_id")
  userId  Int @map("user_id")

  route Route @relation(fields: [routeId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([routeId])
  @@unique([userId])
  @@map("routes_updated_by_user_links")
}

model RoutePoint {
  id                            Int                            @id @default(autoincrement())
  organizationId                Int                            @map("organization_id")
  code                          String
  name                          String
  contactName                   String                         @map("contact_name")
  contactEmail                  String                         @map("contact_email")
  contactPhoneNumber            String                         @map("contact_phone_number")
  notes                         String
  displayOrder                  Int?                           @map("display_order")
  pickupTimes                   Json?                          @map("pickup_times")
  deliveryTimes                 Json?                          @map("delivery_times")
  requestedNote                 String?                        @map("requested_note")
  isActive                      Boolean                        @default(true) @map("is_active")
  createdAt                     DateTime                       @default(now()) @map("created_at")
  createdById                   Int?                           @map("created_by_id")
  updatedAt                     DateTime                       @updatedAt @map("updated_at")
  updatedById                   Int?                           @map("updated_by_id")
  publishedAt                   DateTime?                      @map("published_at")
  RoutePointsAddressLinks       RoutePointsAddressLinks?
  RoutesPickupPointsLinks       RoutesPickupPointsLinks[]
  RoutesDeliveryPointsLinks     RoutesDeliveryPointsLinks[]
  RoutePointsCreatedByUserLinks RoutePointsCreatedByUserLinks?
  RoutePointsUpdatedByUserLinks RoutePointsUpdatedByUserLinks?
  RoutePointsZoneLinks          RoutePointsZoneLinks?
  ZonesRoutePointsLinks         ZonesRoutePointsLinks?
  WareHousesAddressLinks        WareHousesAddressLinks?

  @@map("route_points")
}

model RoutePointsAddressLinks {
  id           Int @id @default(autoincrement())
  routePointId Int @map("route_point_id")
  addressId    Int @map("address_information_id")

  routePoint RoutePoint         @relation(fields: [routePointId], references: [id])
  address    AddressInformation @relation(fields: [addressId], references: [id])

  @@unique([routePointId])
  @@unique([addressId])
  @@map("route_points_address_links")
}

model RoutesPickupPointsLinks {
  id              Int  @id @default(autoincrement())
  routeId         Int  @map("route_id")
  routePointId    Int  @map("route_point_id")
  routePointOrder Int? @map("route_point_order")

  route      Route      @relation(fields: [routeId], references: [id])
  routePoint RoutePoint @relation(fields: [routePointId], references: [id])

  @@unique([routeId])
  @@unique([routePointId])
  @@map("routes_pickup_points_links")
}

model RoutesDeliveryPointsLinks {
  id              Int  @id @default(autoincrement())
  routeId         Int  @map("route_id")
  routePointId    Int  @map("route_point_id")
  routePointOrder Int? @map("route_point_order")

  route      Route      @relation(fields: [routeId], references: [id])
  routePoint RoutePoint @relation(fields: [routePointId], references: [id])

  @@unique([routeId])
  @@unique([routePointId])
  @@map("routes_delivery_points_links")
}

model RoutePointsCreatedByUserLinks {
  id           Int @id @default(autoincrement())
  routePointId Int @map("route_point_id")
  userId       Int @map("user_id")

  routePoint RoutePoint @relation(fields: [routePointId], references: [id])
  user       User       @relation(fields: [userId], references: [id])

  @@unique([routePointId])
  @@unique([userId])
  @@map("route_points_created_by_user_links")
}

model RoutePointsUpdatedByUserLinks {
  id           Int @id @default(autoincrement())
  routePointId Int @map("route_point_id")
  userId       Int @map("user_id")

  routePoint RoutePoint @relation(fields: [routePointId], references: [id])
  user       User       @relation(fields: [userId], references: [id])

  @@unique([routePointId])
  @@unique([userId])
  @@map("route_points_updated_by_user_links")
}

model RoutePointsVehicleTypesLinks {
  id               Int @id @default(autoincrement())
  routePointId     Int @map("route_point_id")
  vehicleTypeId    Int @map("vehicle_type_id")
  vehicleTypeOrder Int @map("vehicle_type_order")

  @@map("route_points_vehicle_types_links")
}

model RoutePointsZoneLinks {
  id              Int  @id @default(autoincrement())
  routePointId    Int  @map("route_point_id")
  zoneId          Int  @map("zone_id")
  routePointOrder Int? @map("route_point_order")

  routePoint RoutePoint @relation(fields: [routePointId], references: [id])
  zone       Zone       @relation(fields: [zoneId], references: [id])

  @@unique([routePointId])
  @@unique([zoneId])
  @@map("route_points_zone_links")
}

model Operation {
  id          Int       @id @default(autoincrement())
  resourceId  Int       @map("resource_id")
  name        String
  action      String
  description String?
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  createdById Int?      @map("created_by_id")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  updatedById Int?      @map("updated_by_id")
  publishedAt DateTime? @map("published_at")

  @@map("operations")
}

model OperationsCreatedByUserLinks {
  id          Int @id @default(autoincrement())
  operationId Int @map("operation_id")
  userId      Int @map("user_id")

  @@map("operations_created_by_user_links")
}

model OperationsUpdatedByUserLinks {
  id          Int @id @default(autoincrement())
  operationId Int @map("operation_id")
  userId      Int @map("user_id")

  @@map("operations_updated_by_user_links")
}

enum OrderType {
  IMPORT
  TRANSHIPMENT
}

model Order {
  id              Int              @id @default(autoincrement())
  organizationId  Int              @map("organization_id")
  type            OrderType?       @map("type")
  code            String
  orderDate       DateTime         @map("order_date")
  deliveryDate    DateTime?        @map("delivery_date")
  weight          Int?
  totalAmount     Int?             @map("total_amount")
  merchandiseNote String?          @map("merchandise_note")
  isDraft         Boolean          @default(true) @map("is_draft")
  paymentDueDate  DateTime?        @map("payment_due_date")
  notes           String?
  lastStatusType  OrderStatusType? @map("last_status_type")
  paymentDate     DateTime?        @map("payment_date")
  cbm             Float?           @map("cbm")
  meta            Json?
  createdAt       DateTime         @default(now()) @map("created_at")
  createdById     Int?             @map("created_by_id")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  updatedById     Int?             @map("updated_by_id")
  publishedAt     DateTime?        @map("published_at")

  OrdersUnitOfMeasureLinks      OrdersUnitOfMeasureLinks?
  OrdersRouteLinks              OrdersRouteLinks[]
  OrdersCustomerLinks           OrdersCustomerLinks?
  OrdersUpdatedByUserLinks      OrdersUpdatedByUserLinks?
  OrdersCreatedByUserLinks      OrdersCreatedByUserLinks?
  OrdersParticipantsLinks       OrdersParticipantsLinks[]
  OrderStatusesOrderLinks       OrderStatusesOrderLinks[]
  OrderItemsOrderLinks          OrderItemsOrderLinks[]
  OrdersGroupLinks              OrdersGroupLinks?
  OrderTripsOrderLinks          OrderTripsOrderLinks[]
  OrderGroupProcessByOrderLinks OrderGroupProcessByOrderLinks[]

  @@unique([code])
  @@map("orders")
}

model OrdersCreatedByUserLinks {
  id      Int @id @default(autoincrement())
  orderId Int @map("order_id")
  userId  Int @map("user_id")

  order Order @relation(fields: [orderId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([orderId])
  @@unique([userId])
  @@map("orders_created_by_user_links")
}

model OrdersUpdatedByUserLinks {
  id      Int @id @default(autoincrement())
  orderId Int @map("order_id")
  userId  Int @map("user_id")

  order Order @relation(fields: [orderId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([orderId])
  @@unique([userId])
  @@map("orders_updated_by_user_links")
}

model OrdersCustomerLinks {
  id         Int @id @default(autoincrement())
  orderId    Int @map("order_id")
  customerId Int @map("customer_id")

  order    Order    @relation(fields: [orderId], references: [id])
  customer Customer @relation(fields: [customerId], references: [id])

  @@unique([orderId])
  @@unique([customerId])
  @@map("orders_customer_links")
}

model OrdersParticipantsLinks {
  id                    Int  @id @default(autoincrement())
  orderId               Int  @map("order_id")
  orderParticipantId    Int  @map("order_participant_id")
  orderParticipantOrder Int? @map("order_participant_order")

  order            Order            @relation(fields: [orderId], references: [id])
  orderParticipant OrderParticipant @relation(fields: [orderParticipantId], references: [id])

  @@unique([orderId])
  @@unique([orderParticipantId])
  @@map("orders_participants_links")
}

model OrdersMerchandiseTypesLinks {
  id                   Int @id @default(autoincrement())
  orderId              Int @map("order_id")
  merchandiseTypeId    Int @map("merchandise_type_id")
  merchandiseTypeOrder Int @map("merchandise_type_order")

  @@map("orders_merchandise_types_links")
}

model OrdersRouteLinks {
  id      Int @id @default(autoincrement())
  orderId Int @map("order_id")
  routeId Int @map("route_id")

  order Order @relation(fields: [orderId], references: [id])
  route Route @relation(fields: [routeId], references: [id])

  @@unique([orderId])
  @@unique([routeId])
  @@map("orders_route_links")
}

model OrdersUnitOfMeasureLinks {
  id              Int @id @default(autoincrement())
  orderId         Int @map("order_id")
  unitOfMeasureId Int @map("unit_of_measure_id")

  order         Order         @relation(fields: [orderId], references: [id])
  unitOfMeasure UnitOfMeasure @relation(fields: [unitOfMeasureId], references: [id])

  @@unique([orderId])
  @@unique([unitOfMeasureId])
  @@map("orders_unit_links")
}

model OrderRouteStatus {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  meta           Json?
  createdAt      DateTime  @default(now()) @map("created_at")
  createdById    Int?      @map("created_by_id")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  updatedById    Int?      @map("updated_by_id")
  publishedAt    DateTime? @map("published_at")

  @@map("order_route_statuses")
}

model OrderRouteStatusOrderLinks {
  id                    Int  @id @default(autoincrement())
  orderRouteStatusId    Int  @map("order_route_status_id")
  orderId               Int  @map("order_id")
  orderRouteStatusOrder Int? @map("order_route_status_order")

  @@map("order_route_statuses_order_links")
}

model OrderRouteStatusRoutePointLinks {
  id                 Int @id @default(autoincrement())
  orderRouteStatusId Int @map("order_route_status_id")
  routePointId       Int @map("route_point_id")

  @@map("order_route_statuses_route_point_links")
}

model OrderRouteStatusCreatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderRouteStatusId Int @map("order_route_status_id")
  userId             Int @map("user_id")

  @@map("order_route_statuses_created_by_user_links")
}

model OrderRouteStatusUpdatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderRouteStatusId Int @map("order_route_status_id")
  userId             Int @map("user_id")

  @@map("order_route_statuses_updated_by_user_links")
}

enum OrderStatusType {
  NEW
  RECEIVED
  IN_PROGRESS
  COMPLETED
  CANCELED
}

model OrderStatus {
  id                              Int                              @id @default(autoincrement())
  organizationId                  Int                              @map("organization_id")
  type                            OrderStatusType
  notes                           String?
  createdAt                       DateTime                         @default(now()) @map("created_at")
  createdById                     Int?                             @map("created_by_id")
  updatedAt                       DateTime                         @updatedAt @map("updated_at")
  updatedById                     Int?                             @map("updated_by_id")
  publishedAt                     DateTime?                        @map("published_at")
  OrderStatusesCreatedByUserLinks OrderStatusesCreatedByUserLinks?
  OrderStatusesUpdatedByUserLinks OrderStatusesUpdatedByUserLinks?
  OrderStatusesOrderLinks         OrderStatusesOrderLinks[]

  @@map("order_statuses")
}

enum AccessLogType {
  ORDER
  TRIP
  SIGNIN
}

model AccessLog {
  id          Int           @id @default(autoincrement())
  type        AccessLogType @default(ORDER)
  targetId    Int           @map("target_id")
  timestamp   DateTime
  referrerUrl String?       @map("referrer_url")
  ipAddress   String?       @map("ip_address")
  userAgent   String?       @map("user_agent")
  deviceType  String?       @map("device_type")
  os          String?
  browser     String?
  createdAt   DateTime      @default(now()) @map("created_at")
  createdById Int?          @map("created_by_id")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  updatedById Int?          @map("updated_by_id")
  publishedAt DateTime?     @map("published_at")

  @@map("access_logs")
}

model AccessLogCreatedByUserLinks {
  id          Int @id @default(autoincrement())
  accessLogId Int @map("access_log_id")
  userId      Int @map("user_id")

  @@map("access_logs_created_by_user_links")
}

enum ShareObjectType {
  ORDER
  TRIP
}

model ShareObject {
  id             Int             @id @default(autoincrement())
  organizationId Int             @map("organization_id")
  type           ShareObjectType @default(ORDER)
  targetId       Int             @map("target_id")
  token          String
  sharedEmail    Json?           @map("shared_emails")
  expirationDate DateTime?       @map("expiration_date")
  meta           Json?
  isActive       Boolean         @default(true) @map("is_active")
  createdAt      DateTime        @default(now()) @map("created_at")
  createdById    Int?            @map("created_by_id")
  updatedAt      DateTime        @updatedAt @map("updated_at")
  updatedById    Int?            @map("updated_by_id")
  publishedAt    DateTime?       @map("published_at")

  @@map("share_objects")
}

model ShareObjectCreatedByUserLinks {
  id            Int @id @default(autoincrement())
  shareObjectId Int @map("share_object_id")
  userId        Int @map("user_id")

  @@map("share_objects_created_by_user_links")
}

model ShareObjectUpdatedByUserLinks {
  id            Int @id @default(autoincrement())
  shareObjectId Int @map("share_object_id")
  userId        Int @map("user_id")

  @@map("share_objects_updated_by_user_links")
}

model OrderStatusesCreatedByUserLinks {
  id            Int @id @default(autoincrement())
  orderStatusId Int @map("order_status_id")
  userId        Int @map("user_id")

  orderStatus OrderStatus @relation(fields: [orderStatusId], references: [id])
  user        User        @relation(fields: [userId], references: [id])

  @@unique([orderStatusId])
  @@unique([userId])
  @@map("order_statuses_created_by_user_links")
}

model OrderStatusesUpdatedByUserLinks {
  id            Int @id @default(autoincrement())
  orderStatusId Int @map("order_status_id")
  userId        Int @map("user_id")

  orderStatus OrderStatus @relation(fields: [orderStatusId], references: [id])
  user        User        @relation(fields: [userId], references: [id])

  @@unique([orderStatusId])
  @@unique([userId])
  @@map("order_statuses_updated_by_user_links")
}

model OrderStatusesOrderLinks {
  id               Int  @id @default(autoincrement())
  orderStatusId    Int  @map("order_status_id")
  orderId          Int  @map("order_id")
  orderStatusOrder Int? @map("order_status_order")

  orderStatus OrderStatus @relation(fields: [orderStatusId], references: [id])
  order       Order       @relation(fields: [orderId], references: [id])

  @@unique([orderStatusId])
  @@unique([orderId])
  @@map("order_statuses_order_links")
}

model Setting {
  id                       Int      @id @default(autoincrement())
  autoActivateOrganization Boolean? @default(false)
  recipientEmail           String?
  createdAt                DateTime @default(now())
  createdById              Int?
  updatedAt                DateTime @updatedAt
  updatedById              Int?
  userDetailId             Int?
}

model OrderItem {
  id                   Int                    @id @default(autoincrement())
  organizationId       Int?                   @map("organization_id")
  name                 String
  packageWeight        Int?                   @map("package_weight")
  packageLength        Int?                   @map("package_length")
  packageWidth         Int?                   @map("package_width")
  packageHeight        Int?                   @map("package_height")
  quantity             Int?
  unit                 String?
  notes                String?
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime               @updatedAt @map("updated_at")
  publishedAt          DateTime?              @map("published_at")
  OrderItemsOrderLinks OrderItemsOrderLinks[]

  @@map("order_items")
}

model OrderItemsMerchandiseTypeLinks {
  id                Int @id @default(autoincrement())
  orderItemId       Int @map("order_item_id")
  merchandiseTypeId Int @map("merchandise_type_id")

  @@map("order_items_merchandise_type_links")
}

model OrderItemsOrderLinks {
  id             Int  @id @default(autoincrement())
  orderItemId    Int  @map("order_item_id")
  orderId        Int  @map("order_id")
  orderItemOrder Int? @map("order_item_order")

  orderItem OrderItem @relation(fields: [orderItemId], references: [id])
  order     Order     @relation(fields: [orderId], references: [id])

  @@unique([orderItemId])
  @@unique([orderId])
  @@map("order_items_order_links")
}

enum OrderParticipantRole {
  OWNER
  EDITOR
  VIEWER
}

model OrderParticipant {
  id                                  Int                                  @id @default(autoincrement())
  organizationId                      Int                                  @map("organization_id")
  orderId                             Int?                                 @map("order_id")
  role                                OrderParticipantRole?
  createdAt                           DateTime                             @default(now()) @map("created_at")
  createdById                         Int?                                 @map("created_by_id")
  updatedAt                           DateTime                             @updatedAt @map("updated_at")
  updatedById                         Int?                                 @map("updated_by_id")
  publishedAt                         DateTime?                            @map("published_at")
  OrdersParticipantsLinks             OrdersParticipantsLinks[]
  OrderParticipantsCreatedByUserLinks OrderParticipantsCreatedByUserLinks?
  OrderParticipantsUpdatedByUserLinks OrderParticipantsUpdatedByUserLinks?
  OrderParticipantsUserLinks          OrderParticipantsUserLinks?

  @@map("order_participants")
}

model OrderParticipantsCreatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderParticipantId Int @map("order_participant_id")
  userId             Int @map("user_id")

  orderParticipant OrderParticipant @relation(fields: [orderParticipantId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderParticipantId])
  @@unique([userId])
  @@map("order_participants_created_by_user_links")
}

model OrderParticipantsUpdatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderParticipantId Int @map("order_participant_id")
  userId             Int @map("user_id")

  orderParticipant OrderParticipant @relation(fields: [orderParticipantId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderParticipantId])
  @@unique([userId])
  @@map("order_participants_updated_by_user_links")
}

model OrderParticipantsUserLinks {
  id                 Int @id @default(autoincrement())
  orderParticipantId Int @map("order_participant_id")
  userId             Int @map("user_id")

  orderParticipant OrderParticipant @relation(fields: [orderParticipantId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderParticipantId])
  @@unique([userId])
  @@map("order_participants_user_links")
}

model OrganizationsCreatedByUserLinks {
  id             Int @id @default(autoincrement())
  organizationId Int @map("organization_id")
  userId         Int @map("user_id")

  @@map("organizations_created_by_user_links")
}

model organizationsUpdatedByUserLinks {
  id             Int @id @default(autoincrement())
  organizationId Int @map("organization_id")
  userId         Int @map("user_id")

  @@map("organizations_updated_by_user_links")
}

model smtpSettingsCreatedByUserLinks {
  id            Int @id @default(autoincrement())
  smtpSettingId Int @map("smtp_setting_id")
  userId        Int @map("user_id")

  @@map("smtp_settings_created_by_user_links")
}

model smtpSettingsUpdatedByUserLinks {
  id            Int @id @default(autoincrement())
  smtpSettingId Int @map("smtp_setting_id")
  userId        Int @map("user_id")

  @@map("smtp_settings_updated_by_user_links")
}

model organizationSettingsSmtpLinks {
  id                    Int @id @default(autoincrement())
  organizationSettingId Int @map("organization_setting_id")
  smtpSettingId         Int @map("smtp_setting_id")

  @@map("organization_settings_smtp_links")
}

model organizationsSettingLinks {
  id                    Int @id @default(autoincrement())
  organizationId        Int @map("organization_id")
  organizationSettingId Int @map("organization_setting_id")

  @@map("organizations_setting_links")
}

enum AdvanceType {
  DRIVER
  SUBCONTRACTOR
}

enum AdvanceAdvanceType {
  SALARY
  COST
}

enum AdvanceStatus {
  PENDING
  REJECTED
  ACCEPTED
  PAYMENT
}

model Advance {
  id              Int                @id @default(autoincrement())
  organizationId  Int                @map("organization_id")
  type            AdvanceType        @default(DRIVER)
  advanceType     AdvanceAdvanceType @default(SALARY) @map("advance_type")
  amount          Float?
  approvedAmount  Float?             @map("approved_amount")
  reason          String?
  status          AdvanceStatus      @default(PENDING)
  paymentDate     DateTime?          @map("payment_date")
  rejectionReason String?            @map("rejection_reason")
  rejectionDate   DateTime?          @map("rejection_date")
  description     String?
  createdAt       DateTime           @default(now()) @map("created_at")
  createdById     Int?               @map("created_by_id")
  updatedAt       DateTime           @updatedAt @map("updated_at")
  updatedById     Int?               @map("updated_by_id")
  publishedAt     DateTime?          @map("published_at")
}

model AdvancesCreatedByUserLinks {
  id        Int @id @default(autoincrement())
  advanceId Int @map("advance_id")
  userId    Int @map("user_id")

  @@map("advances_created_by_user_links")
}

model AdvancesUpdatedByUserLinks {
  id        Int @id @default(autoincrement())
  advanceId Int @map("advance_id")
  userId    Int @map("user_id")

  @@map("advances_updated_by_user_links")
}

model AdvancesDriverLinks {
  id        Int @id @default(autoincrement())
  advanceId Int @map("advance_id")
  driverId  Int @map("driver_id")

  @@map("advances_driver_links")
}

model AdvancesSubcontractorLinks {
  id              Int @id @default(autoincrement())
  advanceId       Int @map("advance_id")
  subcontractorId Int @map("subcontractor_id")

  @@map("advances_subcontractor_links")
}

model AdvancesOrderLinks {
  id        Int @id @default(autoincrement())
  advanceId Int @map("advance_id")
  orderId   Int @map("order_id")

  @@map("advances_order_links")
}

model AdvancesOrderTripLinks {
  id          Int @id @default(autoincrement())
  advanceId   Int @map("advance_id")
  orderTripId Int @map("order_trip_id")

  @@map("advances_order_trip_links")
}

model AdvancesPaymentByLinks {
  id        Int @id @default(autoincrement())
  advanceId Int @map("advance_id")
  userId    Int @map("user_id")

  @@map("advances_payment_by_links")
}

enum TrailerOwnerType {
  ORGANIZATION
  SUBCONTRACTOR
}

model Trailer {
  id                                 Int              @id @default(autoincrement())
  ownerType                          TrailerOwnerType
  organizationId                     Int
  subcontractorId                    Int
  trailerNumber                      String
  idNumber                           String?
  typeId                             Int?
  brand                              String?
  yearOfManufacture                  Int?
  color                              String?
  startUsageDate                     DateTime?
  maxLength                          Float?
  maxWidth                           Float?
  maxHeight                          Float?
  cubicMeterCapacity                 Float?
  tonPayloadCapacity                 Float?
  palletCapacity                     Int?
  registrationCertificateId          Int?
  registrationDate                   DateTime?
  registrationExpirationDate         DateTime?
  technicalSafetyCertificateId       Int?
  technicalSafetyRegistrationDate    DateTime?
  technicalSafetyExpirationDate      DateTime?
  liabilityInsuranceCertificateId    Int?
  liabilityInsuranceRegistrationDate DateTime?
  liabilityInsuranceExpirationDate   DateTime?
  vehicleId                          Int?
  description                        String?
  isActive                           Boolean          @default(true)
  meta                               Json?
  createdAt                          DateTime         @default(now())
  createdById                        Int?
  updatedAt                          DateTime         @updatedAt
  updatedById                        Int?
  publishedAt                        DateTime?
}

enum OrderTripStatusType {
  NEW
  PENDING_CONFIRMATION
  CONFIRMED
  WAITING_FOR_PICKUP
  WAREHOUSE_GOING_TO_PICKUP
  WAREHOUSE_PICKED_UP
  WAITING_FOR_DELIVERY
  DELIVERED
  COMPLETED
  CANCELED
}

model OrderTripStatus {
  id                                  Int                                  @id @default(autoincrement())
  organizationId                      Int                                  @map("organization_id")
  type                                OrderTripStatusType?
  notes                               String?
  createdAt                           DateTime                             @default(now()) @map("created_at")
  createdById                         Int?                                 @map("created_by_id")
  updatedAt                           DateTime                             @updatedAt @map("updated_at")
  updatedById                         Int?                                 @map("updated_by_id")
  publishedAt                         DateTime?                            @map("published_at")
  OrderTripStatusesTripLinks          OrderTripStatusesTripLinks[]
  OrderTripStatusesDriverReportLinks  OrderTripStatusesDriverReportLinks?
  OrderTripStatusesCreatedByUserLinks OrderTripStatusesCreatedByUserLinks?
  OrderTripStatusesUpdatedByUserLinks OrderTripStatusesUpdatedByUserLinks?

  @@map("order_trip_statuses")
}

model OrderTripStatusesCreatedByUserLinks {
  id                Int @id @default(autoincrement())
  orderTripStatusId Int @map("order_trip_status_id")
  userId            Int @map("user_id")

  orderTripStatus OrderTripStatus @relation(fields: [orderTripStatusId], references: [id])
  user            User            @relation(fields: [userId], references: [id])

  @@unique([orderTripStatusId])
  @@unique([userId])
  @@map("order_trip_statuses_created_by_user_links")
}

model OrderTripStatusesUpdatedByUserLinks {
  id                Int @id @default(autoincrement())
  orderTripStatusId Int @map("order_trip_status_id")
  userId            Int @map("user_id")

  orderTripStatus OrderTripStatus @relation(fields: [orderTripStatusId], references: [id])
  user            User            @relation(fields: [userId], references: [id])

  @@unique([orderTripStatusId])
  @@unique([userId])
  @@map("order_trip_statuses_updated_by_user_links")
}

model OrderTrip {
  id                            Int                           @id @default(autoincrement())
  organizationId                Int                           @map("organization_id")
  code                          String?
  weight                        Float?
  pickupDate                    DateTime?                     @map("pickup_date")
  deliveryDate                  DateTime?                     @map("delivery_date")
  subcontractorCost             Float?                        @map("subcontractor_cost")
  driverCost                    Float?                        @map("driver_cost")
  bridgeToll                    Float?                        @map("bridge_toll")
  otherCost                     Float?                        @map("other_cost")
  billOfLading                  String?                       @map("bill_of_lading")
  notes                         String?
  lastStatusType                OrderTripStatusType?          @map("last_status_type")
  pickupTimeNotes               String?                       @map("pickup_time_notes")
  deliveryTimeNotes             String?                       @map("delivery_time_notes")
  createdAt                     DateTime                      @default(now()) @map("created_at")
  createdById                   Int?                          @map("created_by_id")
  updatedAt                     DateTime                      @updatedAt @map("updated_at")
  updatedById                   Int?                          @map("updated_by_id")
  publishedAt                   DateTime?                     @map("published_at")
  billOfLadingReceived          Boolean?                      @map("bill_of_lading_received")
  billOfLadingReceivedDate      DateTime?                     @map("bill_of_lading_received_date")
  driverNotificationScheduledAt DateTime?                     @map("driver_notification_scheduled_at")
  meta                          Json?
  OrderTripsOrderLinks          OrderTripsOrderLinks[]
  OrderTripsCreatedByUserLinks  OrderTripsCreatedByUserLinks?
  OrderTripsUpdatedByUserLinks  OrderTripsUpdatedByUserLinks?
  OrderTripStatusesTripLinks    OrderTripStatusesTripLinks[]
  OrderTripsDriverLinks         OrderTripsDriverLinks?
  OrderTripsVehicleLinks        OrderTripsVehicleLinks?
  OrderTripMessageTripLinks     OrderTripMessageTripLinks[]

  @@map("order_trips")
}

model OrderTripsCreatedByUserLinks {
  id          Int @id @default(autoincrement())
  orderTripId Int @map("order_trip_id")
  userId      Int @map("user_id")

  orderTrip OrderTrip @relation(fields: [orderTripId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([orderTripId])
  @@unique([userId])
  @@map("order_trips_created_by_user_links")
}

model OrderTripsUpdatedByUserLinks {
  id          Int @id @default(autoincrement())
  orderTripId Int @map("order_trip_id")
  userId      Int @map("user_id")

  orderTrip OrderTrip @relation(fields: [orderTripId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([orderTripId])
  @@unique([userId])
  @@map("order_trips_updated_by_user_links")
}

model OrderTripStatusesTripLinks {
  id                   Int  @id @default(autoincrement())
  orderTripStatusId    Int  @map("order_trip_status_id")
  orderTripId          Int  @map("order_trip_id")
  orderTripStatusOrder Int? @map("order_trip_status_order")

  orderTripStatus OrderTripStatus @relation(fields: [orderTripStatusId], references: [id])
  orderTrip       OrderTrip       @relation(fields: [orderTripId], references: [id])

  @@unique([orderTripStatusId])
  @@unique([orderTripId])
  @@map("order_trip_statuses_trip_links")
}

model OrderTripStatusesDriverReportLinks {
  id                Int @id @default(autoincrement())
  orderTripStatusId Int @map("order_trip_status_id")
  driverReportId    Int @map("driver_report_id")

  orderTripStatus OrderTripStatus @relation(fields: [orderTripStatusId], references: [id])
  driverReport    DriverReport    @relation(fields: [driverReportId], references: [id])

  @@unique([orderTripStatusId])
  @@unique([driverReportId])
  @@map("order_trip_statuses_driver_report_links")
}

model OrderTripsDriverLinks {
  id          Int @id @default(autoincrement())
  orderTripId Int @map("order_trip_id")
  driverId    Int @map("driver_id")

  orderTrip OrderTrip @relation(fields: [orderTripId], references: [id])
  driver    Driver    @relation(fields: [driverId], references: [id])

  @@unique([orderTripId])
  @@unique([driverId])
  @@map("order_trips_driver_links")
}

model OrderTripsOrderLinks {
  id             Int  @id @default(autoincrement())
  orderTripId    Int  @map("order_trip_id")
  orderId        Int  @map("order_id")
  orderTripOrder Int? @map("order_trip_order")

  order     Order     @relation(fields: [orderId], references: [id])
  orderTrip OrderTrip @relation(fields: [orderTripId], references: [id])

  @@unique([orderId])
  @@unique([orderTripId])
  @@map("order_trips_order_links")
}

model OrderTripsVehicleLinks {
  id          Int @id @default(autoincrement())
  orderTripId Int @map("order_trip_id")
  vehicleId   Int @map("vehicle_id")

  orderTrip OrderTrip @relation(fields: [orderTripId], references: [id])
  vehicle   Vehicle   @relation(fields: [vehicleId], references: [id])

  @@unique([orderTripId])
  @@unique([vehicleId])
  @@map("order_trips_vehicle_links")
}

model Maintenance {
  id                   Int                  @id @default(autoincrement())
  organizationId       Int
  type                 MaintenanceTypeType?
  otherMaintenanceType String?
  description          String?
  isOtherType          Boolean?
  isRepeat             Boolean?
  repeatDate           DateTime?
  maintenanceDate      DateTime?
  estimateCost         Int?
  actualCost           Int?
  createdAt            DateTime             @default(now())
  createdById          Int?
  updatedAt            DateTime             @updatedAt
  updatedById          Int?
}

model FilesRelatedMorphs {
  id          Int    @id @default(autoincrement())
  fileId      Int    @map("file_id")
  relatedId   Int    @map("related_id")
  relatedType String @map("related_type")
  field       String
  order       Int?

  @@map("files_related_morphs")
}

model OrganizationMembersCreatedByUserLinks {
  id                   Int @id @default(autoincrement())
  organizationMemberId Int @map("organization_member_id")
  userId               Int @map("user_id")

  @@map("organization_members_created_by_user_links")
}

model OrganizationMembersUpdatedByUserLinks {
  id                   Int @id @default(autoincrement())
  organizationMemberId Int @map("organization_member_id")
  userId               Int @map("user_id")

  @@map("organization_members_updated_by_user_links")
}

model OrganizationMembersMemberLinks {
  id                   Int @id @default(autoincrement())
  organizationMemberId Int @map("organization_member_id")
  userId               Int @map("user_id")

  @@map("organization_members_member_links")
}

model OrganizationMembersRoleLinks {
  id                   Int @id @default(autoincrement())
  organizationMemberId Int @map("organization_member_id")
  organizationRoleId   Int @map("organization_role_id")

  @@map("organization_members_role_links")
}

model OrganizationMembersOrganizationLinks {
  id                   Int @id @default(autoincrement())
  organizationMemberId Int @map("organization_member_id")
  organizationId       Int @map("organization_id")

  @@map("organization_members_organization_links")
}

enum OrganizationReportType {
  INVOICE
  DRIVER_SALARY
  ACCOUNTS_RECEIVABLE
  AGGREGATE_ACCOUNTS_RECEIVABLE
  SUBCONTRACTOR_COST
  FUEL_LOGS
  ORGANIZATION_TRIPS
  AGGREGATE_SUBCONTRACTOR_TRIPS
  ORDER_GROUP_PLAN
}

model OrganizationReport {
  id              Int                     @id @default(autoincrement())
  name            String?
  description     String?
  isActive        Boolean?                @map("is_active")
  isSystem        Boolean?                @map("is_system")
  type            OrganizationReportType?
  organizationId  Int?                    @map("organization_id")
  dynamicReportId String?                 @map("dynamic_report_id")
  createdById     Int?                    @map("created_by_id")
  updatedById     Int?                    @map("updated_by_id")
  publishedAt     DateTime?               @map("published_at")
  createdAt       DateTime                @default(now()) @map("created_at")
  updatedAt       DateTime                @updatedAt @map("updated_at")

  @@map("organization_reports")
}

model OrganizationReportsCreatedByUserLinks {
  id                   Int @id @default(autoincrement())
  organizationReportId Int @map("organization_report_id")
  userId               Int @map("user_id")

  @@map("organization_reports_created_by_user_links")
}

model OrganizationReportsUpdatedByUserLinks {
  id                   Int @id @default(autoincrement())
  organizationReportId Int @map("organization_report_id")
  userId               Int @map("user_id")

  @@map("organization_reports_updated_by_user_links")
}

enum OrderTripMessageType {
  NEW
  PENDING_CONFIRMATION
  CONFIRMED
  WAITING_FOR_PICKUP
  WAREHOUSE_GOING_TO_PICKUP
  WAREHOUSE_PICKED_UP
  WAITING_FOR_DELIVERY
  DELIVERED
  COMPLETED
  CANCELED
}

model OrderTripMessage {
  id                                 Int                                 @id @default(autoincrement())
  organizationId                     Int                                 @map("organization_id")
  message                            String?
  latitude                           Float?
  longitude                          Float?
  type                               OrderTripMessageType?
  createdById                        Int?                                @map("created_by_id")
  updatedById                        Int?                                @map("updated_by_id")
  createdAt                          DateTime                            @default(now()) @map("created_at")
  updatedAt                          DateTime                            @updatedAt @map("updated_at")
  publishedAt                        DateTime?                           @map("published_at")
  OrderTripMessageTripLinks          OrderTripMessageTripLinks[]
  OrderTripMessageCreatedByUserLinks OrderTripMessageCreatedByUserLinks?
  OrderTripMessageUpdatedByUserLinks OrderTripMessageUpdatedByUserLinks?
  OrderTripMessagesReadByUsersLinks  OrderTripMessagesReadByUsersLinks?

  @@map("order_trip_messages")
}

model OrderTripMessageCreatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderTripMessageId Int @map("order_trip_message_id")
  userId             Int @map("user_id")

  orderTripMessage OrderTripMessage @relation(fields: [orderTripMessageId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderTripMessageId])
  @@unique([userId])
  @@map("order_trip_messages_created_by_user_links")
}

model OrderTripMessageUpdatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderTripMessageId Int @map("order_trip_message_id")
  userId             Int @map("user_id")

  orderTripMessage OrderTripMessage @relation(fields: [orderTripMessageId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderTripMessageId])
  @@unique([userId])
  @@map("order_trip_messages_updated_by_user_links")
}

model OrderTripMessageTripLinks {
  id                    Int  @id @default(autoincrement())
  orderTripMessageId    Int  @map("order_trip_message_id")
  orderTripId           Int  @map("order_trip_id")
  orderTripMessageOrder Int? @map("order_trip_message_order")

  orderTripMessage OrderTripMessage @relation(fields: [orderTripMessageId], references: [id])
  orderTrip        OrderTrip        @relation(fields: [orderTripId], references: [id])

  @@unique([orderTripMessageId])
  @@unique([orderTripId])
  @@map("order_trip_messages_trip_links")
}

model OrderTripMessagesReadByUsersLinks {
  id                 Int  @id @default(autoincrement())
  orderTripMessageId Int  @map("order_trip_message_id")
  userId             Int  @map("user_id")
  userOrder          Int? @map("user_order")

  orderTripMessage OrderTripMessage @relation(fields: [orderTripMessageId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderTripMessageId])
  @@unique([userId])
  @@map("order_trip_messages_read_by_users_links")
}

model OrganizationRolesCreatedByUserLinks {
  id                 Int @id @default(autoincrement())
  organizationRoleId Int @map("organization_role_id")
  userId             Int @map("user_id")

  @@map("organization_roles_created_by_user_links")
}

model OrganizationRolesUpdatedByUserLinks {
  id                 Int @id @default(autoincrement())
  organizationRoleId Int @map("organization_role_id")
  userId             Int @map("user_id")

  @@map("organization_roles_updated_by_user_links")
}

enum NotificationType {
  NEW_ORDER
  DELETE_ORDER
  NEW_ORDER_PARTICIPANT
  ORDER_STATUS_CHANGED
  ORDER_GROUP_STATUS_CHANGED
  TRIP_STATUS_CHANGED
  TRIP_NEW_MESSAGE
  BILL_OF_LADING_RECEIVED
  BILL_OF_LADING_DRIVER_REMINDER
  BILL_OF_LADING_ACCOUNTANT_REMINDER
  VEHICLE_DOCUMENT_DRIVER_REMINDER
  VEHICLE_DOCUMENT_OPERATOR_REMINDER
  NEW_FUEL_LOG
  TRIP_DRIVER_EXPENSE_CHANGED
  DRIVER_EXPENSE_RECEIVED
  ORDER_GROUP_CLOSE_TO_EXPIRE
}

model Notification {
  id             Int               @id @default(autoincrement())
  organizationId Int               @map("organization_id")
  type           NotificationType?
  subject        String?
  message        String?
  targetId       Int               @map("target_id")
  publishedAt    DateTime?         @map("published_at")
  createdById    Int?              @map("created_by_id")
  updatedById    Int?              @map("updated_by_id")
  createdAt      DateTime          @default(now()) @map("created_at")
  updatedAt      DateTime          @updatedAt @map("updated_at")
  meta           Json?

  @@map("notifications")
}

model NotificationRecipient {
  id          Int       @id @default(autoincrement())
  isRead      Boolean?  @map("is_read")
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  publishedAt DateTime? @map("published_at")

  @@map("notification_recipients")
}

model NotificationCreatedByUserLinks {
  id             Int @id @default(autoincrement())
  notificationId Int @map("notification_id")
  userId         Int @map("user_id")

  @@map("notifications_created_by_user_links")
}

model NotificationUpdatedByUserLinks {
  id             Int @id @default(autoincrement())
  notificationId Int @map("notification_id")
  userId         Int @map("user_id")

  @@map("notifications_updated_by_user_links")
}

model NotificationRecipientsNotificationLinks {
  id                         Int  @id @default(autoincrement())
  notificationId             Int  @map("notification_id")
  notificationRecipientId    Int  @map("notification_recipient_id")
  notificationRecipientOrder Int? @map("notification_recipient_order")

  @@map("notification_recipients_notification_links")
}

model NotificationRecipientsUserLinks {
  id                      Int @id @default(autoincrement())
  notificationRecipientId Int @map("notification_recipient_id")
  userId                  Int @map("user_id")

  @@map("notification_recipients_user_links")
}

model GasStation {
  id             Int       @id @default(autoincrement())
  name           String
  fuelCapacity   Float?    @map("fuel_capacity")
  organizationId Int       @map("organization_id")
  isActive       Boolean?  @map("is_active")
  description    String?
  createdById    Int?      @map("created_by_id")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedById    Int?      @map("updated_by_id")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  publishedAt    DateTime? @map("published_at")

  @@map("gas_stations")
}

model GasStationsAddressLinks {
  id                   Int @id @default(autoincrement())
  gasStationId         Int @map("gas_station_id")
  addressInformationId Int @map("address_information_id")

  @@map("gas_stations_address_links")
}

model GasStationsCreatedByUserLinks {
  id           Int @id @default(autoincrement())
  gasStationId Int @map("gas_station_id")
  userId       Int @map("user_id")

  @@map("gas_stations_created_by_user_links")
}

model GasStationsUpdatedByUserLinks {
  id           Int @id @default(autoincrement())
  gasStationId Int @map("gas_station_id")
  userId       Int @map("user_id")

  @@map("gas_stations_updated_by_user_links")
}

enum DriverExpenseType {
  DRIVER_COST
}

model DriverExpense {
  id             Int                @id @default(autoincrement())
  organizationId Int                @map("organization_id")
  type           DriverExpenseType?
  name           String
  key            String
  displayOrder   Int?               @map("display_order")
  isSystem       Boolean?           @default(false) @map("is_system")
  description    String?
  isActive       Boolean?           @default(true) @map("is_active")
  createdAt      DateTime           @default(now()) @map("created_at")
  createdById    Int?               @map("created_by_id")
  updatedAt      DateTime           @updatedAt @map("updated_at")
  updatedById    Int?               @map("updated_by_id")
  publishedAt    DateTime?          @map("published_at")

  @@map("driver_expenses")
}

model DriverExpensesCreatedByUserLinks {
  id              Int @id @default(autoincrement())
  driverExpenseId Int @map("driver_expense_id")
  userId          Int @map("user_id")

  @@map("driver_expenses_created_by_user_links")
}

model DriverExpensesUpdatedByUserLinks {
  id              Int @id @default(autoincrement())
  driverExpenseId Int @map("driver_expense_id")
  userId          Int @map("user_id")

  @@map("driver_expenses_updated_by_user_links")
}

model TripDriverExpense {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  amount         Float?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  publishedAt    DateTime? @map("published_at")

  @@map("trip_driver_expenses")
}

model TripDriverExpensesDriverExpenseLinks {
  id                  Int @id @default(autoincrement())
  tripDriverExpenseId Int @map("trip_driver_expense_id")
  driverExpenseId     Int @map("driver_expense_id")

  @@map("trip_driver_expenses_driver_expense_links")
}

model TripDriverExpensesTripLinks {
  id                     Int @id @default(autoincrement())
  tripDriverExpenseId    Int @map("trip_driver_expense_id")
  orderTripId            Int @map("order_trip_id")
  tripDriverExpenseOrder Int @map("trip_driver_expense_order")

  @@map("trip_driver_expenses_trip_links")
}

enum FuelType {
  GASOLINE
  DIESEL
}

model FuelLog {
  id                 Int       @id @default(autoincrement())
  organizationId     Int       @map("organization_id")
  date               DateTime?
  latitude           Float?
  longitude          Float?
  liters             Float?
  fuelType           FuelType? @map("fuel_type")
  fuelCost           Float?    @map("fuel_cost")
  odometerReading    Float?    @map("odometer_reading")
  confirmationAt     DateTime? @map("confirmation_at")
  notes              String?
  averageConsumption Float?    @map("average_consumption")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  updatedById        Int?      @map("updated_by_id")
  createdById        Int?      @map("created_by_id")
  publishedAt        DateTime? @map("published_at")

  @@map("fuel_logs")
}

model FuelLogsCreatedByUserLinks {
  id        Int @id @default(autoincrement())
  fuelLogId Int @map("fuel_log_id")
  userId    Int @map("user_id")

  @@map("fuel_logs_created_by_user_links")
}

model FuelLogsUpdatedByUserLinks {
  id        Int @id @default(autoincrement())
  fuelLogId Int @map("fuel_log_id")
  userId    Int @map("user_id")

  @@map("fuel_logs_updated_by_user_links")
}

model FuelLogsConfirmationByLinks {
  id        Int @id @default(autoincrement())
  fuelLogId Int @map("fuel_log_id")
  userId    Int @map("user_id")

  @@map("fuel_logs_confirmation_by_links")
}

model FuelLogsDriverLinks {
  id        Int @id @default(autoincrement())
  fuelLogId Int @map("fuel_log_id")
  driverId  Int @map("driver_id")

  @@map("fuel_logs_driver_links")
}

model FuelLogsVehicleLinks {
  id        Int @id @default(autoincrement())
  fuelLogId Int @map("fuel_log_id")
  vehicleId Int @map("vehicle_id")

  @@map("fuel_logs_vehicle_links")
}

model FuelLogsGasStationLinks {
  id           Int @id @default(autoincrement())
  fuelLogId    Int @map("fuel_log_id")
  gasStationId Int @map("gas_station_id")

  @@map("fuel_logs_gas_station_links")
}

model RouteDriverExpense {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  amount         Float?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  publishedAt    DateTime? @map("published_at")

  @@map("route_driver_expenses")
}

model RouteDriverExpensesDriverExpenseLinks {
  id                   Int @id @default(autoincrement())
  routeDriverExpenseId Int @map("route_driver_expense_id")
  driverExpenseId      Int @map("driver_expense_id")

  @@map("route_driver_expenses_driver_expense_links")
}

model RouteDriverExpensesRouteLinks {
  id                      Int @id @default(autoincrement())
  routeDriverExpenseId    Int @map("route_driver_expense_id")
  routeId                 Int @map("route_id")
  routeDriverExpenseOrder Int @map("route_driver_expense_order")

  @@map("route_driver_expenses_route_links")
}

model VehicleGroup {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  name           String
  description    String?
  isActive       Boolean
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  updatedById    Int?      @map("updated_by_id")
  createdById    Int?      @map("created_by_id")
  publishedAt    DateTime? @map("published_at")

  @@map("vehicle_groups")
}

model VehicleGroupsCreatedByUserLinks {
  id             Int @id @default(autoincrement())
  vehicleGroupId Int @map("vehicle_group_id")
  userId         Int @map("user_id")

  @@map("vehicle_groups_created_by_user_links")
}

model VehicleGroupsUpdatedByUserLinks {
  id             Int @id @default(autoincrement())
  vehicleGroupId Int @map("vehicle_group_id")
  userId         Int @map("user_id")

  @@map("vehicle_groups_updated_by_user_links")
}

model VehicleGroupsManagerLinks {
  id                   Int @id @default(autoincrement())
  vehicleGroupId       Int @map("vehicle_group_id")
  organizationMemberId Int @map("organization_member_id")

  @@map("vehicle_groups_manager_links")
}

model VehiclesVehicleGroupLinks {
  id             Int @id @default(autoincrement())
  vehicleId      Int @map("vehicle_id")
  vehicleGroupId Int @map("vehicle_group_id")
  vehicleOrder   Int @map("vehicle_order")

  @@map("vehicles_vehicle_group_links")
}

model CustomerGroup {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  name           String
  description    String?
  isActive       Boolean   @map("is_active")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  updatedById    Int?      @map("updated_by_id")
  createdById    Int?      @map("created_by_id")
  publishedAt    DateTime? @map("published_at")
}

model CustomerGroupsCreatedByUserLinks {
  id              Int @id @default(autoincrement())
  customerGroupId Int @map("customer_group_id")
  userId          Int @map("user_id")

  @@map("customer_groups_created_by_user_links")
}

model CustomerGroupsUpdatedByUserLinks {
  id              Int @id @default(autoincrement())
  customerGroupId Int @map("customer_group_id")
  userId          Int @map("user_id")

  @@map("customer_groups_updated_by_user_links")
}

model CustomerGroupsManagerLinks {
  id                   Int @id @default(autoincrement())
  customerGroupId      Int @map("customer_group_id")
  organizationMemberId Int @map("organization_member_id")

  @@map("customer_groups_manager_links")
}

model CustomersCustomerGroupLinks {
  id              Int @id @default(autoincrement())
  customerId      Int @map("customer_id")
  customerGroupId Int @map("customer_group_id")
  customerOrder   Int @map("customer_order")

  @@map("customers_customer_group_links")
}

enum DynamicAnalysisType {
  REPORT
  WIDGET
}

model DynamicAnalysis {
  id               Int                 @id @default(autoincrement()) @db.UnsignedInt
  chartId          String?             @map("chart_id") @db.VarChar(64)
  datasetId        String?             @map("dataset_id") @db.VarChar(64)
  reportTemplateId String?             @map("report_template_id") @db.VarChar(64)
  code             String?             @db.VarChar(64)
  type             DynamicAnalysisType
  name             String?             @db.VarChar(255)
  description      String?             @db.VarChar(500)
  displayOrder     Int?                @map("display_order") @db.UnsignedInt
  isActive         Boolean?            @map("is_active")
  createdAt        DateTime            @default(now()) @map("created_at") @db.DateTime(6)
  createdById      Int?                @map("created_by_id") @db.UnsignedInt
  updatedAt        DateTime            @updatedAt @map("updated_at") @db.DateTime(6)
  updatedById      Int?                @map("updated_by_id") @db.UnsignedInt

  @@index([createdById], map: "dynamic_analyses_created_by_id_fk")
  @@index([updatedById], map: "dynamic_analyses_updated_by_id_fk")
  @@map("dynamic_analyses")
}

enum DynamicAnalysisFilterDataType {
  TEXT
  NUMBER
  CHOICE
  DATE
  DATETIME
  BOOLEAN
  DRIVER
  VEHICLE
}

model DynamicAnalysisFilter {
  id           Int                            @id @default(autoincrement())
  name         String?
  key          String?                        @map("key")
  defaultValue String?                        @map("default_value")
  description  String?
  dataType     DynamicAnalysisFilterDataType? @map("data_type")
  size         Int?
  displayOrder Int?                           @map("display_order")
  isActive     Boolean?                       @map("is_active")
  createdAt    DateTime                       @default(now()) @map("created_at")
  createdById  Int?                           @map("created_by_id")
  updatedAt    DateTime                       @updatedAt @map("updated_at")
  updatedById  Int?                           @map("updated_by_id")

  @@map("dynamic_analysis_filters")
}

model UserGuide {
  id                Int      @id @default(autoincrement())
  targetPath        String?  @map("target_path")
  targetElement     String?  @map("target_element")
  documentationLink String?  @map("documentation_link")
  isActive          Boolean? @map("is_active")
  createdAt         DateTime @default(now()) @map("created_at")
  createdById       Int?     @map("created_by_id")
  updatedAt         DateTime @updatedAt @map("updated_at")
  updatedById       Int?     @map("updated_by_id")

  @@map("user_guides")
}

enum OrderGroupStatusType {
  PLAN
  APPROVED
  IN_PROGRESS
  INBOUND
  IN_STOCK
  OUTBOUND
  TRANSHIPMENT
  DELIVERED
  COMPLETED
  CANCELED
}

model OrderGroupStatus {
  id                                   Int                                   @id @default(autoincrement())
  organizationId                       Int                                   @map("organization_id")
  type                                 OrderGroupStatusType
  notes                                String?
  createdAt                            DateTime                              @default(now()) @map("created_at")
  updatedAt                            DateTime                              @updatedAt @map("updated_at")
  updatedById                          Int?                                  @map("updated_by_id")
  createdById                          Int?                                  @map("created_by_id")
  publishedAt                          DateTime?                             @map("published_at")
  OrderGroupStatusesCreatedByUserLinks OrderGroupStatusesCreatedByUserLinks?
  OrderGroupStatusesGroupLinks         OrderGroupStatusesGroupLinks[]
  OrderGroupStatusesUpdatedByUserLinks OrderGroupStatusesUpdatedByUserLinks?

  @@map("order_group_statuses")
}

model OrderGroupStatusesCreatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderGroupStatusId Int @map("order_group_status_id")
  userId             Int @map("user_id")

  orderGroupStatus OrderGroupStatus @relation(fields: [orderGroupStatusId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderGroupStatusId])
  @@unique([userId])
  @@map("order_group_statuses_created_by_user_links")
}

model OrderGroupStatusesUpdatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderGroupStatusId Int @map("order_group_status_id")
  userId             Int @map("user_id")

  orderGroupStatus OrderGroupStatus @relation(fields: [orderGroupStatusId], references: [id])
  user             User             @relation(fields: [userId], references: [id])

  @@unique([orderGroupStatusId])
  @@unique([userId])
  @@map("order_group_statuses_updated_by_user_links")
}

model OrderGroup {
  id                            Int                            @id @default(autoincrement())
  code                          String
  organizationId                Int                            @map("organization_id")
  lastStatusType                OrderGroupStatusType?          @map("last_status_type")
  createdAt                     DateTime                       @default(now()) @map("created_at")
  updatedAt                     DateTime                       @updatedAt @map("updated_at")
  updatedById                   Int?                           @map("updated_by_id")
  createdById                   Int?                           @map("created_by_id")
  publishedAt                   DateTime?                      @map("published_at")
  OrdersGroupLinks              OrdersGroupLinks?
  OrderGroupsWarehouseLinks     OrderGroupsWarehouseLinks?
  OrderGroupProcessByOrderLinks OrderGroupProcessByOrderLinks?
  OrderGroupStatusesGroupLinks  OrderGroupStatusesGroupLinks[]

  @@unique([code])
  @@map("order_groups")
}

model OrderGroupStatusesGroupLinks {
  id                    Int  @id @default(autoincrement())
  orderGroupId          Int  @map("order_group_id")
  orderGroupStatusId    Int  @map("order_group_status_id")
  orderGroupStatusOrder Int? @map("order_group_status_order")

  orderGroup       OrderGroup       @relation(fields: [orderGroupId], references: [id])
  orderGroupStatus OrderGroupStatus @relation(fields: [orderGroupStatusId], references: [id])

  @@unique([orderGroupId])
  @@unique([orderGroupStatusId])
  @@map("order_group_statuses_group_links")
}

model Zone {
  id                      Int                      @id @default(autoincrement())
  organizationId          Int                      @map("organization_id")
  name                    String?
  description             String?
  isActive                Boolean?                 @map("is_active")
  createdAt               DateTime                 @default(now()) @map("created_at")
  createdById             Int?                     @map("created_by_id")
  updatedAt               DateTime                 @updatedAt @map("updated_at")
  updatedById             Int?                     @map("updated_by_id")
  publishedAt             DateTime?                @map("published_at")
  RoutePointsZoneLinks    RoutePointsZoneLinks?
  ZonesRoutePointsLinks   ZonesRoutePointsLinks?
  ZonesCreatedByUserLinks ZonesCreatedByUserLinks?
  ZonesUpdatedByUserLinks ZonesUpdatedByUserLinks?

  @@map("zones")
}

model ZonesAdjacentZonesLinks {
  id             Int  @id @default(autoincrement())
  zoneId         Int  @map("zone_id")
  adjacentZoneId Int  @map("inv_zone_id")
  zoneOrder      Int? @map("zone_order")

  @@unique([zoneId])
  @@unique([adjacentZoneId])
  @@map("zones_adjacent_zones_links")
}

model ZonesRoutePointsLinks {
  id           Int  @id @default(autoincrement())
  zoneId       Int  @map("zone_id")
  routePointId Int  @map("route_point_id")
  zoneOrder    Int? @map("zone_order")

  zone       Zone       @relation(fields: [zoneId], references: [id])
  routePoint RoutePoint @relation(fields: [routePointId], references: [id])

  @@unique([zoneId])
  @@unique([routePointId])
  @@map("zones_route_points_links")
}

model ZonesParentZonesLinks {
  id           Int  @id @default(autoincrement())
  zoneId       Int  @map("zone_id")
  parentZoneId Int  @map("inv_zone_id")
  zoneOrder    Int? @map("zone_order")

  @@unique([zoneId])
  @@unique([parentZoneId])
  @@map("zones_parent_links")
}

model ZonesCreatedByUserLinks {
  id     Int @id @default(autoincrement())
  zoneId Int @map("zone_id")
  userId Int @map("user_id")

  zone Zone @relation(fields: [zoneId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([zoneId])
  @@unique([userId])
  @@map("zones_created_by_user_links")
}

model ZonesUpdatedByUserLinks {
  id     Int @id @default(autoincrement())
  zoneId Int @map("zone_id")
  userId Int @map("user_id")

  zone Zone @relation(fields: [zoneId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([zoneId])
  @@unique([userId])
  @@map("zones_updated_by_user_links")
}

model RoutePointsAdjacentPointsLinks {
  id              Int  @id @default(autoincrement())
  routePointId    Int  @map("route_point_id")
  adjacentPointId Int  @map("inv_route_point_id")
  routePointOrder Int? @map("route_point_order")

  @@map("route_points_adjacent_points_links")
}

model OrdersGroupLinks {
  id           Int  @id @default(autoincrement())
  orderId      Int  @map("order_id")
  orderGroupId Int  @map("order_group_id")
  orderOrder   Int? @map("order_order")

  order      Order      @relation(fields: [orderId], references: [id])
  orderGroup OrderGroup @relation(fields: [orderGroupId], references: [id])

  @@unique([orderId])
  @@unique([orderGroupId])
  @@map("orders_group_links")
}

model Warehouse {
  id                           Int                           @id @default(autoincrement())
  organizationId               Int?                          @map("organization_id")
  name                         String?
  description                  String?
  isActive                     Boolean                       @map("is_active")
  apiConfig                    Json?                         @map("api_config")
  createdAt                    DateTime                      @default(now()) @map("created_at")
  updatedAt                    DateTime                      @updatedAt @map("updated_at")
  updatedById                  Int?                          @map("updated_by_id")
  createdById                  Int?                          @map("created_by_id")
  publishedAt                  DateTime?                     @map("published_at")
  WareHousesAddressLinks       WareHousesAddressLinks?
  WareHousesCreatedByUserLinks WareHousesCreatedByUserLinks?
  WareHousesUpdatedByUserLinks WareHousesUpdatedByUserLinks?
  OrderGroupsWarehouseLinks    OrderGroupsWarehouseLinks?

  @@map("ware_houses")
}

model WareHousesAddressLinks {
  id           Int @id @default(autoincrement())
  wareHouseId  Int @map("warehouse_id")
  routePointId Int @map("route_point_id")

  wareHouse  Warehouse  @relation(fields: [wareHouseId], references: [id])
  routePoint RoutePoint @relation(fields: [routePointId], references: [id])

  @@unique([wareHouseId])
  @@unique([routePointId])
  @@map("warehouses_address_links")
}

model WareHousesCreatedByUserLinks {
  id          Int @id @default(autoincrement())
  wareHouseId Int @map("warehouse_id")
  userId      Int @map("user_id")

  wareHouse Warehouse @relation(fields: [wareHouseId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([wareHouseId])
  @@unique([userId])
  @@map("warehouses_created_by_user_links")
}

model WareHousesUpdatedByUserLinks {
  id          Int @id @default(autoincrement())
  wareHouseId Int @map("warehouse_id")
  userId      Int @map("user_id")

  wareHouse Warehouse @relation(fields: [wareHouseId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([wareHouseId])
  @@unique([userId])
  @@map("warehouses_updated_by_user_links")
}

model OrderGroupsWarehouseLinks {
  id           Int @id @default(autoincrement())
  orderGroupId Int @map("order_group_id")
  wareHouseId  Int @map("warehouse_id")

  orderGroup OrderGroup @relation(fields: [orderGroupId], references: [id])
  wareHouse  Warehouse  @relation(fields: [wareHouseId], references: [id])

  @@unique([orderGroupId])
  @@unique([wareHouseId])
  @@map("order_groups_warehouse_links")
}

model OrderGroupProcessByOrderLinks {
  id                Int  @id @default(autoincrement())
  orderGroupId      Int  @map("order_group_id")
  orderId           Int  @map("order_id")
  orderProcessOrder Int? @map("order_process_order")

  orderGroup OrderGroup @relation(fields: [orderGroupId], references: [id])
  order      Order      @relation(fields: [orderId], references: [id])

  @@unique([orderGroupId])
  @@unique([orderId])
  @@index([orderGroupId])
  @@index([orderId])
  @@map("order_groups_process_by_order_links")
}

enum ExpenseTypeType {
  LOLO
  CONTAINER_DEPOSIT
  DETENTION_FEE
}

model ExpenseType {
  id               Int              @id @default(autoincrement())
  organizationId   Int              @map("organization_id")
  type             ExpenseTypeType?
  name             String
  key              String
  displayOrder     Int?             @map("display_order")
  description      String?
  isActive         Boolean?         @default(true) @map("is_active")
  publicToCustomer Boolean?         @default(true) @map("public_to_customer")
  isSystem         Boolean?         @default(false) @map("is_system")
  canDriverView    Boolean?         @default(true) @map("can_driver_view")
  canDriverEdit    Boolean?         @default(true) @map("can_driver_edit")
  createdAt        DateTime         @default(now()) @map("created_at")
  createdById      Int?             @map("created_by_id")
  updatedAt        DateTime         @updatedAt @map("updated_at")
  updatedById      Int?             @map("updated_by_id")
  publishedAt      DateTime?        @map("published_at")

  @@map("expense_types")
}

model ExpenseTypesCreatedByUserLinks {
  id            Int @id @default(autoincrement())
  expenseTypeId Int @map("expense_type_id")
  userId        Int @map("user_id")

  @@map("expense_types_created_by_user_links")
}

model ExpenseTypesUpdatedByUserLinks {
  id            Int @id @default(autoincrement())
  expenseTypeId Int @map("expense_type_id")
  userId        Int @map("user_id")

  @@map("expense_types_updated_by_user_links")
}

model OrderTripExpense {
  id             Int       @id @default(autoincrement())
  organizationId Int       @map("organization_id")
  amount         Float?    @map("amount")
  notes          String?   @map("notes")
  createdAt      DateTime  @default(now()) @map("created_at")
  createdById    Int?      @map("created_by_id")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  updatedById    Int?      @map("updated_by_id")
  publishedAt    DateTime? @map("published_at")

  @@map("order_trip_expenses")
}

model OrderTripExpensesCreatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderTripExpenseId Int @map("order_trip_expense_id")
  userId             Int @map("user_id")

  @@map("order_trip_expenses_created_by_user_links")
}

model OrderTripExpensesUpdatedByUserLinks {
  id                 Int @id @default(autoincrement())
  orderTripExpenseId Int @map("order_trip_expense_id")
  userId             Int @map("user_id")

  @@map("order_trip_expenses_updated_by_user_links")
}

model OrderTripExpensesExpenseTypeLinks {
  id                 Int @id @default(autoincrement())
  orderTripExpenseId Int @map("order_trip_expense_id")
  expenseTypeId      Int @map("expense_type_id")

  @@map("order_trip_expenses_expense_type_links")
}

model OrderTripExpensesTripLinks {
  id                    Int @id @default(autoincrement())
  orderTripExpenseId    Int @map("order_trip_expense_id")
  orderTripId           Int @map("order_trip_id")
  orderTripExpenseOrder Int @map("order_trip_expense_order")

  @@map("order_trip_expenses_trip_links")
}
